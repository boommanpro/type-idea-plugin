

// This script will be run within the webview itself
// It cannot access the main VS Code APIs directly
// @ts-nocheck

(function () {

  // init

  var source={
    "languages": {
      "words": [
        "english",
        "italian",
        "german",
        "spanish",
        "chinese",
        "korean",
        "polish",
        "punjabi",
        "swedish",
        "french",
        "portuguese",
        "russian",
        "finnish",
        "englishTop1000"
      ],
      "code": [
        "javascript",
        "python",
        "java",
        "csharp",
        "php",
        "typescript",
        "cpp",
        "c",
        "go",
        "kotlin",
        "ruby",
        "rust"
      ]
    },
    "words": {
      "english": [
        "the",
        "be",
        "of",
        "and",
        "a",
        "to",
        "in",
        "he",
        "have",
        "it",
        "that",
        "for",
        "they",
        "I",
        "with",
        "as",
        "not",
        "on",
        "she",
        "at",
        "by",
        "this",
        "we",
        "you",
        "do",
        "but",
        "from",
        "or",
        "which",
        "one",
        "would",
        "all",
        "will",
        "there",
        "say",
        "who",
        "make",
        "when",
        "can",
        "more",
        "if",
        "no",
        "man",
        "out",
        "other",
        "so",
        "what",
        "time",
        "up",
        "go",
        "about",
        "than",
        "into",
        "could",
        "state",
        "only",
        "new",
        "year",
        "some",
        "take",
        "come",
        "these",
        "know",
        "see",
        "use",
        "get",
        "like",
        "then",
        "first",
        "any",
        "work",
        "now",
        "may",
        "such",
        "give",
        "over",
        "think",
        "most",
        "even",
        "find",
        "day",
        "also",
        "after",
        "way",
        "many",
        "must",
        "look",
        "before",
        "great",
        "back",
        "through",
        "long",
        "where",
        "much",
        "should",
        "well",
        "people",
        "down",
        "own",
        "just",
        "because",
        "good",
        "each",
        "those",
        "feel",
        "seem",
        "how",
        "high",
        "too",
        "place",
        "little",
        "world",
        "very",
        "still",
        "nation",
        "hand",
        "old",
        "life",
        "tell",
        "write",
        "become",
        "here",
        "show",
        "house",
        "both",
        "between",
        "need",
        "mean",
        "call",
        "develop",
        "under",
        "last",
        "right",
        "move",
        "thing",
        "general",
        "school",
        "never",
        "same",
        "another",
        "begin",
        "while",
        "number",
        "part",
        "turn",
        "real",
        "leave",
        "might",
        "want",
        "point",
        "form",
        "off",
        "child",
        "few",
        "small",
        "since",
        "against",
        "ask",
        "late",
        "home",
        "interest",
        "large",
        "person",
        "end",
        "open",
        "public",
        "follow",
        "during",
        "present",
        "without",
        "again",
        "hold",
        "govern",
        "around",
        "possible",
        "head",
        "consider",
        "word",
        "program",
        "problem",
        "however",
        "lead",
        "system",
        "set",
        "order",
        "eye",
        "plan",
        "run",
        "keep",
        "face",
        "fact",
        "group",
        "play",
        "stand",
        "increase",
        "early",
        "course",
        "change",
        "help",
        "line"
      ],
      "italian": [
        "come",
        "io",
        "il",
        "suo",
        "che",
        "lui",
        "era",
        "per",
        "su",
        "sono",
        "con",
        "essi",
        "essere",
        "a",
        "uno",
        "avere",
        "questo",
        "da",
        "caldo",
        "parola",
        "ma",
        "cosa",
        "alcuni",
        "è",
        "esso",
        "voi",
        "o",
        "aveva",
        "il",
        "di",
        "a",
        "e",
        "un",
        "in",
        "noi",
        "lattina",
        "fuori",
        "altro",
        "erano",
        "che",
        "fare",
        "loro",
        "tempo",
        "se",
        "volontà",
        "come",
        "suddetto",
        "un",
        "ogni",
        "dire",
        "fa",
        "set",
        "tre",
        "desiderare",
        "aria",
        "bene",
        "anche",
        "giocare",
        "piccolo",
        "fine",
        "mettere",
        "casa",
        "leggere",
        "mano",
        "porto",
        "grande",
        "compitare",
        "aggiungere",
        "anche",
        "terra",
        "qui",
        "mosto",
        "grande",
        "alto",
        "tale",
        "seguire",
        "atto",
        "perché",
        "chiedere",
        "maschi",
        "cambiamento",
        "è",
        "andato",
        "luce",
        "tipo",
        "spento",
        "bisogno",
        "casa",
        "immagine",
        "provare",
        "noi",
        "di",
        "nuovo",
        "animale",
        "punto",
        "madre",
        "mondo",
        "vicino",
        "costruire",
        "se",
        "stesso",
        "terra",
        "padre",
        "qualsiasi",
        "nuovo",
        "lavoro",
        "parte",
        "prendere",
        "ottenere",
        "posto",
        "fatto",
        "vivere",
        "dove",
        "dopo",
        "indietro",
        "poco",
        "solo",
        "turno",
        "uomo",
        "anno",
        "è",
        "venuto",
        "spettacolo",
        "ogni",
        "buono",
        "me",
        "dare",
        "il",
        "nostro",
        "sotto",
        "nome",
        "molto",
        "attraverso",
        "solo",
        "forma",
        "frase",
        "grande",
        "pensare",
        "dire",
        "aiutare",
        "basso",
        "linea",
        "differire",
        "turno",
        "causa",
        "molto",
        "dire",
        "prima",
        "spostare",
        "diritto",
        "ragazzo",
        "vecchio",
        "troppo",
        "stesso",
        "lei",
        "tutto",
        "ci",
        "quando",
        "su",
        "uso",
        "il",
        "tuo",
        "modo",
        "circa",
        "molti",
        "allora",
        "loro",
        "scrivere",
        "sarebbe",
        "come",
        "così",
        "queste",
        "lei",
        "lungo",
        "rendere",
        "cosa",
        "vedere",
        "lui",
        "due",
        "ha",
        "guardare",
        "di",
        "più",
        "giorno",
        "potuto",
        "andare",
        "venire",
        "ha",
        "fatto",
        "numero",
        "suono",
        "no",
        "più",
        "persone",
        "il",
        "mio",
        "oltre",
        "sapere",
        "acqua",
        "di",
        "chiamata",
        "primo",
        "che",
        "può",
        "giù",
        "lato",
        "stato",
        "ora",
        "trovare"
      ],
      "german": [
        "die",
        "der",
        "und",
        "in",
        "zu",
        "den",
        "das",
        "nicht",
        "von",
        "sie",
        "ist",
        "des",
        "sich",
        "mit",
        "dem",
        "dass",
        "er",
        "es",
        "ein",
        "ich",
        "auf",
        "so",
        "eine",
        "auch",
        "als",
        "an",
        "nach",
        "wie",
        "im",
        "für",
        "man",
        "aber",
        "aus",
        "durch",
        "wenn",
        "nur",
        "war",
        "noch",
        "werden",
        "bei",
        "hat",
        "wir",
        "was",
        "wird",
        "sein",
        "einen",
        "welche",
        "sind",
        "oder",
        "zur",
        "um",
        "haben",
        "einer",
        "mir",
        "über",
        "ihm",
        "diese",
        "einem",
        "ihr",
        "uns",
        "da",
        "zum",
        "kann",
        "doch",
        "vor",
        "dieser",
        "mich",
        "ihn",
        "du",
        "hatte",
        "seine",
        "mehr",
        "am",
        "denn",
        "nun",
        "unter",
        "sehr",
        "selbst",
        "schon",
        "hier",
        "bis",
        "habe",
        "ihre",
        "dann",
        "ihnen",
        "seiner",
        "alle",
        "wieder",
        "meine",
        "Zeit",
        "gegen",
        "vom",
        "ganz",
        "einzelnen",
        "wo",
        "muss",
        "ohne",
        "eines",
        "können",
        "sei",
        "ja",
        "wurde",
        "jetzt",
        "immer",
        "seinen",
        "wohl",
        "dieses",
        "ihren",
        "würde",
        "diesen",
        "sondern",
        "weil",
        "welcher",
        "nichts",
        "diesem",
        "alles",
        "waren",
        "will",
        "Herr",
        "viel",
        "mein",
        "also",
        "soll",
        "worden",
        "lassen",
        "dies",
        "machen",
        "ihrer",
        "weiter",
        "Leben",
        "recht",
        "etwas",
        "keine",
        "seinem",
        "ob",
        "dir",
        "allen",
        "großen",
        "Jahre",
        "Weise",
        "müssen",
        "welches",
        "wäre",
        "erst",
        "einmal",
        "Mann",
        "hätte",
        "zwei",
        "dich",
        "allein",
        "Herren",
        "während",
        "Paragraph",
        "anders",
        "Liebe",
        "kein",
        "damit",
        "gar",
        "Hand",
        "Herrn",
        "euch",
        "sollte",
        "konnte",
        "ersten",
        "deren",
        "zwischen",
        "wollen",
        "denen",
        "dessen",
        "sagen",
        "bin",
        "Menschen",
        "gut",
        "darauf",
        "wurden",
        "weiß",
        "gewesen",
        "Seite",
        "bald",
        "weit",
        "große",
        "solche",
        "hatten",
        "eben",
        "andern",
        "beiden",
        "macht",
        "sehen",
        "ganze",
        "anderen",
        "lange",
        "wer",
        "ihrem",
        "zwar",
        "gemacht",
        "dort",
        "kommen",
        "Welt",
        "heute",
        "Frau",
        "werde",
        "derselben",
        "ganzen",
        "deutschen",
        "lässt",
        "vielleicht",
        "meiner"
      ],
      "spanish": [
        "de",
        "la",
        "que",
        "el",
        "en",
        "y",
        "a",
        "los",
        "se",
        "del",
        "las",
        "un",
        "por",
        "con",
        "no",
        "una",
        "su",
        "para",
        "es",
        "al",
        "lo",
        "como",
        "más",
        "o",
        "pero",
        "sus",
        "le",
        "ha",
        "me",
        "si",
        "sin",
        "sobre",
        "este",
        "ya",
        "entre",
        "cuando",
        "todo",
        "esta",
        "ser",
        "son",
        "dos",
        "también",
        "fue",
        "había",
        "era",
        "muy",
        "años",
        "hasta",
        "desde",
        "está",
        "mi",
        "porque",
        "qué",
        "sólo",
        "han",
        "yo",
        "hay",
        "vez",
        "puede",
        "todos",
        "así",
        "nos",
        "ni",
        "parte",
        "tiene",
        "él",
        "uno",
        "donde",
        "bien",
        "tiempo",
        "mismo",
        "ese",
        "ahora",
        "cada",
        "e",
        "vida",
        "otro",
        "después",
        "te",
        "otros",
        "aunque",
        "esa",
        "eso",
        "hace",
        "otra",
        "gobierno",
        "tan",
        "durante",
        "siempre",
        "día",
        "tanto",
        "ella",
        "tres",
        "sí",
        "dijo",
        "sido",
        "gran",
        "país",
        "según",
        "menos"
      ],
      "chinese": [
        "一",
        "在",
        "有",
        "个",
        "我",
        "不",
        "这",
        "了",
        "他",
        "也",
        "就",
        "人",
        "都",
        "说",
        "而",
        "我们",
        "你",
        "了",
        "要",
        "会",
        "对",
        "及",
        "和",
        "与",
        "以",
        "很",
        "种",
        "的",
        "大",
        "能",
        "着",
        "她",
        "那",
        "上",
        "但",
        "年",
        "还",
        "可以",
        "最",
        "自己",
        "为",
        "来",
        "所",
        "他们",
        "两",
        "各",
        "可",
        "为",
        "或",
        "好",
        "等",
        "又",
        "将",
        "因为",
        "于",
        "由",
        "从",
        "更",
        "被",
        "才",
        "已",
        "者",
        "每",
        "次",
        "把",
        "三",
        "什么",
        "问题",
        "其",
        "让",
        "此",
        "做",
        "再",
        "所以",
        "只",
        "与",
        "则",
        "台湾",
        "却",
        "并",
        "位",
        "想",
        "去",
        "呢",
        "学生",
        "表示",
        "到",
        "公司",
        "将",
        "如果",
        "社会",
        "看",
        "小",
        "天",
        "因此",
        "新",
        "但是",
        "它",
        "中",
        "使",
        "工作",
        "全",
        "觉得",
        "使用",
        "这些",
        "里",
        "并",
        "由于",
        "时候",
        "知道",
        "这样",
        "一",
        "认为",
        "时间",
        "事",
        "过",
        "向",
        "可能",
        "中国",
        "美国",
        "到",
        "和",
        "几",
        "系统",
        "政府",
        "大家",
        "国家",
        "许多",
        "生活",
        "跟",
        "已经",
        "大学",
        "研究",
        "因",
        "本",
        "二",
        "活动",
        "该",
        "世界",
        "应",
        "四",
        "希望",
        "方式",
        "内",
        "项",
        "啊",
        "下",
        "环境",
        "一些",
        "必须",
        "文化",
        "高",
        "孩子",
        "没有",
        "不能",
        "如",
        "开始",
        "元",
        "不同",
        "仍",
        "网路",
        "日本",
        "用",
        "中心",
        "来",
        "对",
        "虽然",
        "重要",
        "地方",
        "进行",
        "关系",
        "市场",
        "太",
        "老师",
        "提供",
        "学校",
        "应该",
        "指出",
        "经济",
        "其他",
        "家",
        "发展",
        "教育",
        "成为",
        "多",
        "非常",
        "便",
        "方面",
        "很多",
        "吃",
        "然后",
        "未",
        "发现",
        "电脑",
        "一样",
        "而且",
        "心",
        "不过",
        "无法",
        "企业"
      ],
      "korean": [
        "것",
        "하다",
        "있다",
        "수",
        "하다",
        "나",
        "없다",
        "않다",
        "사람",
        "우리",
        "그",
        "아니다",
        "보다",
        "거",
        "보다",
        "같다",
        "주다",
        "대하다",
        "가다",
        "년",
        "한",
        "말",
        "일",
        "이",
        "말하다",
        "위하다",
        "그러나",
        "오다",
        "알다",
        "씨",
        "그렇다",
        "크다",
        "일",
        "사회",
        "많다",
        "안",
        "좋다",
        "더",
        "받다",
        "그것",
        "집",
        "나오다",
        "그리고",
        "문제",
        "그런",
        "살다",
        "저",
        "못하다",
        "생각하다",
        "모르다",
        "속",
        "만들다",
        "데",
        "앞",
        "경우",
        "중",
        "어떤",
        "잘",
        "그녀",
        "먹다",
        "자신",
        "문화",
        "원",
        "생각",
        "어떻다",
        "명",
        "통하다",
        "그러다",
        "그러다",
        "소리",
        "다시",
        "다른",
        "이런",
        "여자",
        "개",
        "정도",
        "다",
        "좀",
        "싶다",
        "보이다",
        "가지다",
        "함께",
        "아이",
        "지나다",
        "많이",
        "시간",
        "너",
        "인간",
        "사실",
        "나다",
        "이렇다",
        "어머니",
        "눈",
        "뭐",
        "점",
        "의하다",
        "시대",
        "다음",
        "이러하다",
        "누구",
        "곳",
        "여러",
        "안",
        "하나",
        "세계",
        "버리다",
        "위",
        "운동",
        "퍼센트",
        "학교",
        "자기",
        "가장",
        "대통령",
        "가지",
        "시작하다",
        "바로",
        "어느",
        "그래서",
        "무엇",
        "정부",
        "모든",
        "번",
        "그거",
        "돈",
        "국가",
        "그런데",
        "날",
        "여기",
        "모두",
        "여성",
        "친구",
        "마음",
        "후",
        "놓다",
        "관계",
        "아버지",
        "남자",
        "어디",
        "몸",
        "얼굴",
        "왜",
        "나타나다",
        "지역",
        "다르다",
        "모습",
        "물",
        "만나다",
        "내다",
        "보이다",
        "쓰다",
        "이것",
        "없이",
        "이번",
        "길",
        "생활",
        "쓰다",
        "뿐",
        "사이",
        "방법",
        "새롭다",
        "내다",
        "앉다",
        "처음",
        "손",
        "몇",
        "그때",
        "과정",
        "삶",
        "갖다",
        "찾다",
        "특히",
        "시",
        "이상",
        "지금",
        "나가다",
        "이야기",
        "교육",
        "사다",
        "경제",
        "아직",
        "잡다",
        "같이",
        "선생님",
        "예술",
        "서다",
        "못",
        "역사",
        "읽다",
        "결과",
        "내용",
        "물론",
        "책",
        "일어나다",
        "당신",
        "시장",
        "넣다",
        "중요하다",
        "무슨",
        "느끼다",
        "어렵다"
      ],
      "polish": [
        "się",
        "i",
        "w",
        "nie",
        "na",
        "z",
        "do",
        "to",
        "że",
        "a",
        "o",
        "jak",
        "ale",
        "po",
        "co",
        "tak",
        "za",
        "od",
        "go",
        "już",
        "jego",
        "jej",
        "czy",
        "przez",
        "tylko",
        "tego",
        "sobie",
        "jeszcze",
        "może",
        "ze",
        "kiedy",
        "pan",
        "ich",
        "dla",
        "by",
        "gdy",
        "teraz",
        "ja",
        "ten",
        "który",
        "nawet",
        "bardzo",
        "przed",
        "tu",
        "jednak",
        "pod",
        "coś",
        "tam",
        "wszystko",
        "przy",
        "więc",
        "nic",
        "bo",
        "nim",
        "żeby",
        "miał",
        "on",
        "być",
        "potem",
        "też",
        "jeśli",
        "bez",
        "nad",
        "gdzie",
        "lecz",
        "siebie",
        "nigdy",
        "ani",
        "właśnie",
        "sam",
        "u",
        "dobrze",
        "niż",
        "jakby",
        "aby",
        "ty",
        "oczy",
        "zawsze",
        "raz",
        "były",
        "no",
        "albo",
        "gdyby",
        "aż",
        "wtedy",
        "przecież",
        "ona",
        "drzwi",
        "jako",
        "chyba",
        "nagle",
        "wszyscy",
        "jeden",
        "czym",
        "kto",
        "sposób",
        "czas",
        "kilka",
        "dlaczego",
        "razem",
        "także",
        "mój",
        "nikt",
        "choć",
        "wiele",
        "dwa",
        "ktoś",
        "lub",
        "trzeba",
        "niech",
        "ku",
        "twarz",
        "którego",
        "we",
        "znowu",
        "człowiek",
        "jakiś",
        "tutaj",
        "szybko",
        "tyle",
        "głos",
        "między",
        "wreszcie",
        "również",
        "życie",
        "oczywiście",
        "znów",
        "swoje",
        "dlatego",
        "zbyt",
        "ciebie",
        "zupełnie",
        "taki",
        "czego",
        "iż",
        "dopiero",
        "powiedzieć",
        "obok",
        "prawie",
        "poza",
        "zaś",
        "wciąż",
        "jeżeli",
        "moje",
        "prawda",
        "trzy",
        "dzień",
        "miejsce",
        "mimo",
        "ponieważ",
        "zaraz",
        "długo",
        "coraz",
        "podczas",
        "natychmiast",
        "zanim",
        "cóż",
        "każdy",
        "zrobić",
        "ojciec",
        "my",
        "dość",
        "oraz",
        "jaki",
        "stanie",
        "wcale",
        "wśród",
        "mieć",
        "zresztą",
        "dziś",
        "ile",
        "chociaż",
        "gdyż",
        "kiedyś",
        "swój",
        "jedynie",
        "pewno",
        "nieco",
        "niemal",
        "gdzieś",
        "jedno",
        "wokół",
        "powoli",
        "wrażenie",
        "matka",
        "świat",
        "kobieta",
        "skąd",
        "myśl",
        "stary",
        "dużo",
        "drogi",
        "nadal",
        "drugi",
        "bowiem",
        "przynajmniej",
        "pewnie",
        "często",
        "razy",
        "mężczyzna",
        "dokładnie",
        "niczego",
        "mówić",
        "dzięki",
        "pewien",
        "widać",
        "cicho",
        "właściwie",
        "rzecz",
        "wolno",
        "oto",
        "ciało",
        "czasem",
        "wiedzieć",
        "stąd",
        "wkrótce",
        "dół",
        "pół",
        "noc",
        "całkiem",
        "wówczas",
        "dom",
        "wzrok",
        "mocno",
        "trudno",
        "dziewczyna",
        "dziecko",
        "skoro",
        "wobec",
        "śmierć",
        "rzeczywiście",
        "koniec",
        "tuż",
        "daleko",
        "pięć",
        "serce",
        "spokojnie",
        "czegoś",
        "wielki",
        "dłoń",
        "część",
        "najpierw",
        "mało",
        "temat",
        "włosy",
        "wraz",
        "usta",
        "widok",
        "równie",
        "ponad"
      ],
      "swedish": [
        "i",
        "och",
        "att",
        "det",
        "som",
        "en",
        "på",
        "är",
        "av",
        "för",
        "med",
        "till",
        "den",
        "har",
        "de",
        "inte",
        "om",
        "ett",
        "han",
        "men",
        "var",
        "jag",
        "sig",
        "från",
        "vi",
        "så",
        "kan",
        "man",
        "när",
        "år",
        "säger",
        "hon",
        "under",
        "också",
        "efter",
        "eller",
        "nu",
        "sin",
        "där",
        "vid",
        "mot",
        "ska",
        "skulle",
        "kommer",
        "ut",
        "får",
        "finns",
        "vara",
        "hade",
        "alla",
        "andra",
        "mycket",
        "än",
        "här",
        "då",
        "sedan",
        "över",
        "bara",
        "in",
        "blir",
        "upp",
        "även",
        "vad",
        "få",
        "två",
        "vill",
        "ha",
        "många",
        "hur",
        "mer",
        "går",
        "sverige",
        "kronor",
        "detta",
        "nya",
        "procent",
        "skall",
        "hans",
        "utan",
        "sina",
        "något",
        "svenska",
        "allt",
        "första",
        "fick",
        "måste",
        "mellan",
        "blev",
        "bli",
        "dag",
        "någon",
        "några",
        "sitt",
        "stora",
        "varit",
        "dem",
        "bland",
        "kl",
        "bra",
        "tre",
        "ta",
        "genom",
        "del",
        "hela",
        "annat",
        "fram",
        "gör",
        "ingen",
        "stockholm",
        "göra",
        "enligt",
        "mig",
        "redan",
        "inom",
        "kom",
        "du",
        "helt",
        "ju",
        "samma",
        "kanske",
        "själv",
        "oss",
        "tidigare",
        "se",
        "miljoner",
        "dock",
        "denna",
        "både",
        "tid",
        "kunna",
        "fått",
        "stor",
        "olika",
        "ser",
        "flera",
        "plats",
        "kunde",
        "gå",
        "ur",
        "gäller",
        "honom",
        "aldrig",
        "barn",
        "varje",
        "lite",
        "sätt",
        "just",
        "väl",
        "tar",
        "åt",
        "mest",
        "per",
        "står",
        "fem",
        "tror",
        "rätt",
        "dessa",
        "gång",
        "därför",
        "fyra",
        "ny",
        "gick",
        "hos",
        "dessutom",
        "ger",
        "lika",
        "eftersom",
        "vilket",
        "trots",
        "tycker",
        "människor",
        "ligger",
        "vet",
        "kvar",
        "bättre",
        "gjorde",
        "ändå",
        "inför",
        "regeringen",
        "senaste",
        "samtidigt",
        "annan",
        "ännu",
        "the",
        "blivit",
        "fall",
        "talet",
        "exempel",
        "gamla",
        "deras",
        "tiden",
        "min",
        "hennes",
        "sista",
        "komma",
        "större",
        "visar",
        "senare",
        "tog",
        "nästa",
        "göteborg",
        "ge",
        "mindre",
        "gjort",
        "usa",
        "innan",
        "alltid",
        "pengar",
        "sade",
        "först",
        "stället",
        "vår",
        "före",
        "svensk",
        "tillbaka",
        "ner",
        "nog",
        "samt",
        "ofta",
        "själva",
        "inget",
        "fler",
        "säga",
        "egen",
        "johansson",
        "igen",
        "tillsammans",
        "runt",
        "nästan",
        "lopp",
        "förra",
        "året",
        "mål",
        "längre",
        "svårt",
        "bästa",
        "andersson",
        "anders",
        "handlar",
        "dagens",
        "länge",
        "stort",
        "peter",
        "frågan",
        "spelar",
        "enda",
        "liv",
        "fortfarande",
        "medan",
        "bakom",
        "haft",
        "minst",
        "berättar",
        "fast",
        "lars",
        "personer",
        "början",
        "problem",
        "alltså",
        "bort",
        "varför",
        "anser",
        "våra",
        "företag",
        "mitt",
        "dess",
        "nytt",
        "tio",
        "inga",
        "fanns",
        "egna",
        "utanför",
        "ville",
        "kr",
        "långt",
        "framför",
        "båda",
        "behöver",
        "par",
        "nej",
        "miljarder",
        "största",
        "polisen",
        "världen",
        "direkt",
        "folk",
        "borde",
        "väg",
        "innebär",
        "sex",
        "klart",
        "göran",
        "bör",
        "vidare",
        "menar",
        "odds",
        "håller",
        "lätt",
        "ytterligare",
        "persson",
        "hem",
        "gått",
        "stockholms",
        "kvinnor",
        "flesta",
        "ja",
        "hand",
        "särskilt",
        "därmed",
        "cirka",
        "tv",
        "landet",
        "heller",
        "gången",
        "åren",
        "började",
        "däremot",
        "sveriges",
        "sett",
        "henne",
        "jobb",
        "kring",
        "känner",
        "liten",
        "beslut",
        "egentligen",
        "länder",
        "börjar",
        "politiska",
        "ni",
        "väder",
        "hjälp",
        "ordförande",
        "tredje",
        "vilka",
        "talar",
        "europa",
        "sidan",
        "riktigt",
        "små",
        "thomas",
        "eu",
        "arbete",
        "vissa",
        "skriver",
        "såg",
        "slut",
        "ibland",
        "ned",
        "fråga",
        "sa",
        "hålla",
        "unga",
        "drygt",
        "jan",
        "emot",
        "magnus",
        "musik",
        "nära",
        "tyskland",
        "gånger",
        "gav",
        "fel",
        "tagit",
        "nr",
        "ekonomiska",
        "namn",
        "ekonyheter",
        "steg",
        "kommit",
        "helst",
        "ihop",
        "liksom",
        "nilsson",
        "amerikanska",
        "sådan",
        "förslag",
        "vilken",
        "livet",
        "dagar",
        "stefan",
        "vann",
        "års",
        "spela",
        "johan",
        "of",
        "säkert",
        "varandra",
        "ganska",
        "veckan",
        "vem",
        "ens",
        "visst",
        "lång",
        "meter",
        "all",
        "nev",
        "regi",
        "hus",
        "sitter",
        "form",
        "lilla",
        "barnen",
        "snabbt",
        "män",
        "grund",
        "hemma",
        "snart",
        "möjligt",
        "låg",
        "dn",
        "klara",
        "frågor",
        "verkligen",
        "precis",
        "amerikansk",
        "publik",
        "skolan",
        "stöd",
        "svensson",
        "internationella",
        "delar",
        "hög",
        "film",
        "larsson",
        "mats",
        "bo",
        "faktiskt",
        "land",
        "gott",
        "gärna",
        "högre",
        "vårt",
        "god",
        "dagen",
        "övriga",
        "betala",
        "lag",
        "björn",
        "slutet",
        "finland",
        "verkar",
        "sagt",
        "krav",
        "stod",
        "omkring",
        "viktigt",
        "ord",
        "hoppas",
        "kort",
        "hittills",
        "minuter",
        "visa",
        "eget",
        "sådana",
        "tänker",
        "frankrike",
        "sju",
        "matchen",
        "tycks",
        "naturligtvis",
        "bok",
        "endast",
        "annars",
        "antal",
        "enkelt",
        "malmö",
        "försöker",
        "ryssland",
        "tal",
        "jonas",
        "mannen",
        "bengt",
        "totalt",
        "ute",
        "visade",
        "låter",
        "anställda",
        "vägen",
        "dollar",
        "spel",
        "väldigt",
        "norge",
        "stå",
        "erik",
        "åtta",
        "årets",
        "via",
        "satt",
        "roll",
        "brukar",
        "nämligen",
        "fortsätter",
        "ungefär",
        "framtiden",
        "bäst",
        "händer",
        "bor",
        "hårt",
        "spelare",
        "främst",
        "program",
        "kallade",
        "rad",
        "förstås",
        "världens",
        "höga",
        "månader",
        "kväll",
        "familjen",
        "igenom",
        "höll",
        "martin",
        "känns",
        "staten",
        "poäng",
        "antalet",
        "skapa",
        "historia",
        "tänka",
        "vd",
        "heter",
        "alls",
        "hör",
        "köpa",
        "div",
        "svt",
        "os",
        "företaget",
        "samhället",
        "sida",
        "sådant",
        "fredrik",
        "maria",
        "mina",
        "extra",
        "eriksson",
        "kräver",
        "goda",
        "långa",
        "hitta",
        "svd",
        "åtminstone",
        "numera",
        "timmar",
        "vecka",
        "knappast",
        "dig",
        "mikael",
        "skrev",
        "pettersson",
        "vore",
        "nyheter",
        "lär",
        "carl",
        "veta",
        "betyder",
        "grupp",
        "lever",
        "spelade",
        "betydligt",
        "gammal",
        "arbetar",
        "tyska",
        "äldre",
        "dels",
        "person",
        "laget",
        "tt",
        "chef",
        "alldeles",
        "kommunen",
        "stark",
        "valet",
        "ifrån",
        "leder",
        "kvinna",
        "ökar",
        "emu",
        "hävdar",
        "lägga",
        "ulf",
        "gunnar",
        "skäl",
        "låta",
        "ansvar",
        "sen",
        "visserligen",
        "politiker",
        "använda",
        "franska",
        "rapport",
        "karlsson",
        "mera",
        "veckor",
        "fl",
        "såväl",
        "därefter",
        "john",
        "viss",
        "landets",
        "teater",
        "ungdomar",
        "plötsligt",
        "ryska",
        "kunnat",
        "nyligen",
        "möjlighet",
        "rollerna",
        "morgon",
        "ena",
        "mars",
        "samband",
        "öka",
        "bygga",
        "litet",
        "börja",
        "vänner",
        "aik",
        "president",
        "marknaden",
        "behövs",
        "staden",
        "högsta",
        "ökat",
        "utveckling",
        "tala",
        "perioden",
        "ställer",
        "försöka",
        "starkt",
        "socialdemokraterna",
        "exempelvis",
        "håll",
        "resultatet",
        "sätta",
        "dit",
        "arbetet",
        "verksamhet",
        "lämna",
        "anna",
        "christer",
        "italien",
        "bild",
        "vars",
        "eva",
        "partiet",
        "intresse",
        "samarbete",
        "närmare",
        "januari",
        "september",
        "uppgifter",
        "london",
        "sak",
        "fullt",
        "göteborgs",
        "michael",
        "pengarna",
        "paris",
        "olsson",
        "resultat",
        "boken",
        "södra",
        "juni",
        "fortsätta",
        "dra",
        "ingenting",
        "samtliga",
        "beror",
        "värld",
        "alltför",
        "danmark",
        "försök",
        "rum",
        "tur",
        "politik",
        "fri",
        "förklarar",
        "bilder",
        "svar",
        "öppna",
        "död",
        "tro",
        "maj",
        "tyckte",
        "vatten",
        "saker",
        "val",
        "enbart",
        "inne",
        "utbildning",
        "eus",
        "information",
        "arbeta",
        "vilja",
        "centrum",
        "europeiska",
        "vinna",
        "ökade",
        "lena",
        "leva",
        "närmaste",
        "ledningen",
        "tidigt",
        "rör",
        "sker",
        "robert",
        "bilar",
        "bolaget",
        "tommy",
        "olof",
        "arbetslösheten",
        "senast",
        "högt",
        "jämfört",
        "hel",
        "skriva",
        "viktiga",
        "övrigt",
        "december",
        "känna",
        "ingår",
        "match",
        "delen",
        "slags",
        "ledning",
        "drar",
        "lennart",
        "konstaterar",
        "bil",
        "finnas",
        "föräldrar",
        "bilen",
        "engelska",
        "publiken",
        "målet",
        "klar",
        "slog",
        "texttv",
        "räknar",
        "andreas",
        "dom",
        "knappt",
        "krävs",
        "kostar",
        "lägre",
        "filmen",
        "viktig",
        "klockan",
        "emellertid",
        "kritik",
        "ställa",
        "slår",
        "låt",
        "sälja",
        "öppet",
        "huset",
        "lagen",
        "råd",
        "tas",
        "kommun",
        "norska",
        "uppgift",
        "möjligheter",
        "tomas",
        "starka",
        "henrik",
        "leif",
        "york",
        "hälften",
        "allra",
        "djurgården",
        "medlemmar",
        "beslutet",
        "mamma",
        "stad",
        "bl",
        "slå",
        "området",
        "förutom",
        "familj",
        "debatt",
        "väntar",
        "behov",
        "kraft",
        "utvecklingen",
        "avgörande",
        "hösten",
        "anledning",
        "vanliga",
        "problemet",
        "välja",
        "trodde",
        "full",
        "patrik",
        "volvo",
        "förslaget",
        "lokala",
        "läsa",
        "brev",
        "snarare",
        "ekonomi",
        "nio",
        "struken",
        "aktier",
        "mat",
        "riksdagen",
        "varken",
        "svarar",
        "undan",
        "elever",
        "dags",
        "david",
        "fjol",
        "offentliga",
        "räcker",
        "sven",
        "betydelse",
        "vita",
        "månad",
        "uppdrag",
        "åka",
        "borta",
        "ton",
        "tag",
        "rent",
        "föll",
        "förr",
        "von",
        "kontakt",
        "tills",
        "regeringens",
        "augusti",
        "fallet",
        "lägger",
        "lära",
        "verk",
        "böcker",
        "ställning",
        "spelas",
        "sommaren",
        "norra",
        "kör",
        "tvingas",
        "fungerar",
        "lärare",
        "liknande",
        "seger",
        "brott",
        "kallas",
        "minska",
        "saknar",
        "vanligt",
        "resa",
        "svarta",
        "universitet",
        "nivå",
        "tanke",
        "and",
        "ständigt",
        "vare",
        "privata",
        "bygger",
        "chans",
        "söker",
        "sätter",
        "förstå",
        "slag",
        "viktigaste",
        "följer",
        "kyrkan",
        "kände",
        "ledare",
        "stan",
        "priset",
        "projekt",
        "april",
        "svenskar",
        "tidningen",
        "nuvarande",
        "strax",
        "uppsala",
        "visat",
        "sent",
        "läser",
        "lyckades",
        "tillräckligt",
        "lyckas",
        "närmast",
        "st",
        "utländska",
        "börjat",
        "samman",
        "författare",
        "dåligt",
        "pappa",
        "företagen",
        "programmet",
        "vm",
        "håkan",
        "kvinnan",
        "klarar",
        "pris",
        "verksamheten",
        "väljer",
        "leda",
        "nå",
        "textat"
      ],
      "french": [
        "nous",
        "mais",
        "pouvoir",
        "avec",
        "tout",
        "aller",
        "voir",
        "en",
        "bien",
        "où",
        "sans",
        "homme",
        "tu",
        "ou",
        "leur",
        "si",
        "deux",
        "mari",
        "moi",
        "vouloir",
        "femme",
        "grand",
        "quand",
        "venir",
        "celui",
        "notre",
        "devoir",
        "là",
        "jour",
        "prendre",
        "même",
        "votre",
        "rien",
        "petit",
        "encore",
        "aussi",
        "quelque",
        "dont",
        "mer",
        "trouver",
        "donner",
        "temps",
        "ça",
        "peu",
        "même",
        "falloir",
        "sous",
        "parler",
        "alors",
        "main",
        "chose",
        "ton",
        "mettre",
        "vie",
        "savoir",
        "yeux",
        "passer",
        "mort",
        "revenir",
        "noir",
        "maintenant",
        "nouveau",
        "ville",
        "rue",
        "enfin",
        "appeler",
        "soir",
        "chambre",
        "mourir",
        "pas",
        "partir",
        "cinq",
        "esprit",
        "soleil",
        "dernier",
        "jeter",
        "dix",
        "roi",
        "état",
        "corps",
        "beaucoup",
        "suivre",
        "bras",
        "écrire",
        "blanc",
        "montrer",
        "tomber",
        "place",
        "ouvrir",
        "ah",
        "parti",
        "assez",
        "leur",
        "cher",
        "voilà",
        "année",
        "loin",
        "point",
        "visage",
        "bruit",
        "lettre",
        "franc",
        "fond",
        "force",
        "arrêter",
        "perdre",
        "autre",
        "après",
        "regarder",
        "toujours",
        "jamais",
        "cela",
        "aimer",
        "non",
        "heure",
        "croire",
        "cent",
        "monde",
        "donc",
        "enfant",
        "fois",
        "seul",
        "autre",
        "entre",
        "vers",
        "chez",
        "demander",
        "jeune",
        "jusque",
        "très",
        "moment",
        "rester",
        "répondre",
        "tête",
        "père",
        "fille",
        "mille",
        "premier",
        "car",
        "entendre",
        "ni",
        "bon",
        "trois",
        "ainsi",
        "an",
        "quatre",
        "un",
        "terre",
        "contre",
        "dieu",
        "monsieur",
        "voix",
        "penser",
        "quel",
        "arriver",
        "maison",
        "devant",
        "coup",
        "beau",
        "connaître",
        "devenir",
        "air",
        "mot",
        "nuit",
        "sentir",
        "eau",
        "vieux",
        "sembler",
        "moins",
        "tenir",
        "ici",
        "comprendre",
        "oui",
        "rendre",
        "toi",
        "vingt",
        "depuis",
        "attendre",
        "sortir",
        "ami",
        "trop",
        "porte",
        "lequel",
        "chaque",
        "amour",
        "pendant",
        "déjà",
        "pied",
        "tant",
        "gens",
        "nom",
        "vivre",
        "reprendre",
        "entrer",
        "porter",
        "pays",
        "ciel",
        "avant",
        "regard",
        "eux"
      ],
      "portuguese": [
        "contra",
        "sistema",
        "foi",
        "à",
        "eles",
        "rio",
        "fazer",
        "estava",
        "José",
        "mercado",
        "qual",
        "sul",
        "ter",
        "só",
        "Carlos",
        "anos",
        "duas",
        "outra",
        "dia",
        "presidente",
        "editoria",
        "especial",
        "no",
        "hoje",
        "acordo",
        "vai",
        "diz",
        "dias",
        "Fernando",
        "estão",
        "ele",
        "as",
        "milhões",
        "foram",
        "outro",
        "banco",
        "assim",
        "sua",
        "trabalho",
        "cotidiano",
        "grande",
        "dinheiro",
        "plano",
        "o",
        "e",
        "nada",
        "preços",
        "ela",
        "aos",
        "sendo",
        "estado",
        "do",
        "grupo",
        "quando",
        "local",
        "eu",
        "antes",
        "às",
        "este",
        "pode",
        "suas",
        "está",
        "número",
        "apenas",
        "seu",
        "porque",
        "durante",
        "com",
        "segundo",
        "menos",
        "agora",
        "final",
        "reportagem",
        "afirmou",
        "mês",
        "para",
        "empresa",
        "pelo",
        "de",
        "da",
        "ontem",
        "são",
        "também",
        "parte",
        "semana",
        "dois",
        "sem",
        "primeira",
        "Paulo",
        "um",
        "mesmo",
        "candidato",
        "esse",
        "tempo",
        "vez",
        "Brasil",
        "nem",
        "disse",
        "mas",
        "tudo",
        "mais",
        "outros",
        "ou",
        "até",
        "cerca",
        "uma",
        "vida",
        "desde",
        "melhor",
        "a",
        "todo",
        "página",
        "pessoas",
        "dos",
        "quatro",
        "seus",
        "cidade",
        "muito",
        "caso",
        "todos",
        "seja",
        "já",
        "tinha",
        "casa",
        "governo",
        "ainda",
        "lei",
        "sempre",
        "exemplo",
        "partir",
        "maior",
        "os",
        "faz",
        "como",
        "tem",
        "era",
        "na",
        "real",
        "processo",
        "podem",
        "ser",
        "polícia",
        "têm",
        "programa",
        "ano",
        "nova",
        "empresas",
        "há",
        "deve",
        "é",
        "me",
        "mundo",
        "quem",
        "país",
        "essa",
        "jogo",
        "equipe",
        "novo",
        "onde",
        "bem",
        "pelos",
        "três",
        "por",
        "depois",
        "qualquer",
        "alguns",
        "nacional",
        "esporte",
        "será",
        "isso",
        "folha",
        "entre",
        "em",
        "não",
        "esta",
        "que",
        "mil",
        "após",
        "sobre",
        "se",
        "primeiro",
        "ao",
        "cada",
        "pouco",
        "além",
        "brasileira",
        "você",
        "forma",
        "das",
        "pela",
        "samba",
        "amizade",
        "golpe",
        "limitante",
        "esquadrão",
        "xícara",
        "café",
        "profissional",
        "adorável",
        "chuva",
        "liberdade",
        "infinito",
        "diversidade",
        "artigos",
        "coxinha",
        "pão",
        "vazio",
        "luz",
        "irregular",
        "relógio",
        "porta",
        "gato",
        "cesta",
        "vela",
        "plantas",
        "pedra",
        "céu",
        "automóvel",
        "bicicleta",
        "caneca",
        "pessoa",
        "comeram",
        "pulei",
        "amanhã",
        "corda",
        "motorista",
        "quebrei",
        "caminhavam",
        "simplicidade",
        "emoções",
        "ofensivo",
        "esqueceu",
        "tristes",
        "disponível",
        "cinco",
        "pastel",
        "poço",
        "moça",
        "garoto",
        "certo",
        "talvez",
        "pior",
        "branco",
        "borracha",
        "roda",
        "baú",
        "circo",
        "cria",
        "simplesmente",
        "amarei"
      ],
      "russian": [
        "год",
        "человек",
        "время",
        "дело",
        "жизнь",
        "день",
        "рука",
        "раз",
        "работа",
        "слово",
        "место",
        "лицо",
        "друг",
        "глаз",
        "вопрос",
        "дом",
        "сторона",
        "страна",
        "мир",
        "случай",
        "голова",
        "ребенок",
        "сила",
        "конец",
        "вид",
        "система",
        "часть",
        "город",
        "отношение",
        "женщина",
        "деньги",
        "земля",
        "машина",
        "вода",
        "отец",
        "проблема",
        "час",
        "право",
        "нога",
        "решение",
        "дверь",
        "образ",
        "история",
        "власть",
        "закон",
        "война",
        "бог",
        "голос",
        "тысяча",
        "книга",
        "возможность",
        "результат",
        "ночь",
        "стол",
        "имя",
        "область",
        "статья",
        "число",
        "компания",
        "народ",
        "жена",
        "группа",
        "развитие",
        "процесс",
        "суд",
        "условие",
        "средство",
        "начало",
        "свет",
        "пора",
        "путь",
        "душа",
        "уровень",
        "форма",
        "связь",
        "минута",
        "улица",
        "вечер",
        "качество",
        "мысль",
        "дорога",
        "мать",
        "действие",
        "месяц",
        "государство",
        "язык",
        "любовь",
        "взгляд",
        "мама",
        "век",
        "школа",
        "цель",
        "общество",
        "деятельность",
        "организация",
        "президент",
        "комната",
        "порядок",
        "момент",
        "театр",
        "письмо",
        "утро",
        "помощь",
        "ситуация",
        "роль",
        "рубль",
        "смысл",
        "состояние",
        "квартира",
        "орган",
        "внимание",
        "тело",
        "труд",
        "сын",
        "мера",
        "смерть",
        "рынок",
        "программа",
        "задача",
        "предприятие",
        "окно",
        "разговор",
        "правительство",
        "семья",
        "производство",
        "информация",
        "положение",
        "центр",
        "ответ",
        "муж",
        "автор",
        "стена",
        "интерес",
        "федерация",
        "правило",
        "управление",
        "мужчина",
        "идея",
        "партия",
        "совет",
        "счет",
        "сердце",
        "движение",
        "вещь",
        "материал",
        "неделя",
        "чувство",
        "глава",
        "наука",
        "ряд",
        "газета",
        "причина",
        "плечо",
        "цена",
        "план",
        "речь",
        "точка",
        "основа",
        "товарищ",
        "культура",
        "данные",
        "мнение",
        "документ",
        "институт",
        "ход",
        "проект",
        "встреча",
        "директор",
        "срок",
        "палец",
        "опыт",
        "служба",
        "судьба",
        "девушка",
        "очередь",
        "лес",
        "состав",
        "член",
        "количество",
        "событие",
        "объект",
        "зал",
        "создание",
        "значение",
        "период",
        "шаг",
        "брат",
        "искусство",
        "структура",
        "номер",
        "пример",
        "исследование",
        "гражданин",
        "игра",
        "начальник",
        "рост",
        "тема",
        "принцип",
        "метод",
        "тип",
        "фильм",
        "край",
        "гость",
        "воздух",
        "характер",
        "борьба",
        "использование",
        "размер",
        "образование",
        "мальчик",
        "кровь",
        "район",
        "небо",
        "армия",
        "класс",
        "представитель",
        "участие",
        "девочка",
        "политика",
        "герой",
        "картина",
        "доллар",
        "спина",
        "территория",
        "пол",
        "поле",
        "изменение",
        "направление",
        "рисунок",
        "течение",
        "церковь",
        "банк",
        "сцена",
        "население",
        "большинство",
        "музыка",
        "правда",
        "свобода",
        "память",
        "команда",
        "союз",
        "врач",
        "договор",
        "дерево",
        "факт",
        "хозяин",
        "природа",
        "угол",
        "телефон",
        "позиция",
        "двор",
        "писатель",
        "самолет",
        "объем",
        "род",
        "солнце",
        "вера",
        "берег",
        "спектакль",
        "фирма",
        "способ",
        "завод",
        "цвет",
        "журнал",
        "руководитель",
        "специалист",
        "оценка",
        "регион",
        "песня",
        "процент",
        "родитель",
        "море",
        "требование",
        "основание",
        "половина",
        "роман",
        "круг",
        "анализ",
        "стихи",
        "автомобиль",
        "экономика",
        "литература",
        "бумага",
        "поэт",
        "степень",
        "господин",
        "надежда",
        "предмет",
        "вариант",
        "министр",
        "граница",
        "дух",
        "модель",
        "операция",
        "пара",
        "сон",
        "название",
        "ум",
        "повод",
        "старик",
        "миллион",
        "успех",
        "счастье",
        "ребята",
        "кабинет",
        "магазин",
        "пространство",
        "выход",
        "удар",
        "база",
        "знание",
        "текст",
        "защита",
        "руководство",
        "площадь",
        "сознание",
        "возраст",
        "участник",
        "участок",
        "пункт",
        "линия",
        "желание",
        "папа",
        "доктор",
        "губа",
        "дочь",
        "среда",
        "председатель",
        "представление",
        "солдат",
        "художник",
        "волос",
        "оружие",
        "соответствие",
        "ветер",
        "парень",
        "зрение",
        "генерал",
        "огонь",
        "понятие",
        "строительство",
        "ухо",
        "грудь",
        "нос",
        "страх",
        "услуга",
        "содержание",
        "радость",
        "безопасность",
        "продукт",
        "комплекс",
        "бизнес",
        "сад",
        "сотрудник",
        "лето",
        "курс",
        "предложение",
        "рот",
        "технология",
        "реформа",
        "отсутствие",
        "собака",
        "камень",
        "будущее",
        "рассказ",
        "контроль",
        "река",
        "продукция",
        "сумма",
        "техника",
        "здание",
        "сфера",
        "необходимость",
        "фонд",
        "подготовка",
        "лист",
        "республика",
        "хозяйство",
        "воля",
        "бюджет",
        "снег",
        "деревня",
        "мужик",
        "элемент",
        "обстоятельство",
        "немец",
        "победа",
        "источник",
        "звезда",
        "выбор",
        "масса",
        "итог",
        "сестра",
        "практика",
        "проведение",
        "карман",
        "слава",
        "кухня",
        "определение",
        "функция",
        "войско",
        "комиссия",
        "применение",
        "капитан",
        "работник",
        "обеспечение",
        "офицер",
        "фамилия",
        "предел",
        "выборы",
        "ученый",
        "бутылка",
        "бой",
        "теория",
        "зона",
        "отдел",
        "зуб",
        "разработка",
        "личность",
        "гора",
        "товар",
        "метр",
        "праздник",
        "влияние",
        "читатель",
        "удовольствие",
        "актер",
        "слеза",
        "ответственность",
        "учитель",
        "акт",
        "боль",
        "множество",
        "особенность",
        "показатель",
        "корабль",
        "звук",
        "впечатление",
        "частность",
        "детство",
        "вывод",
        "профессор",
        "доля",
        "норма",
        "прошлое",
        "командир",
        "коридор",
        "поддержка",
        "рамка",
        "враг",
        "этап",
        "черт",
        "дед",
        "собрание",
        "прием",
        "болезнь",
        "клетка",
        "кожа",
        "заявление",
        "попытка",
        "сравнение",
        "расчет",
        "депутат",
        "комитет",
        "знак",
        "дядя",
        "учет",
        "хлеб",
        "чай",
        "режим",
        "целое",
        "вирус",
        "выражение",
        "здоровье",
        "зима",
        "десяток",
        "глубина",
        "сеть",
        "студент",
        "секунда",
        "скорость",
        "поиск",
        "суть",
        "налог",
        "ошибка",
        "доход",
        "режиссер",
        "поверхность",
        "ощущение",
        "карта",
        "клуб",
        "станция",
        "революция",
        "колено",
        "министерство",
        "стекло",
        "этаж",
        "высота",
        "бабушка",
        "трубка",
        "газ",
        "мастер",
        "поведение",
        "столица",
        "механизм",
        "передача",
        "способность",
        "подход",
        "энергия",
        "существование",
        "исполнение",
        "кино",
        "сожаление",
        "заместитель",
        "ресурс",
        "акция",
        "рождение",
        "администрация",
        "стоимость",
        "улыбка",
        "артист",
        "сосед",
        "фраза",
        "фигура",
        "субъект",
        "реакция",
        "список",
        "фотография",
        "журналист",
        "май",
        "нарушение",
        "заседание",
        "толпа",
        "больница",
        "существо",
        "свойство",
        "долг",
        "поколение",
        "животное",
        "схема",
        "усилие",
        "отличие",
        "остров",
        "противник",
        "волна",
        "реализация",
        "страница",
        "формирование",
        "житель",
        "красота",
        "птица",
        "растение",
        "тень",
        "явление",
        "храм",
        "запах",
        "водка",
        "наличие",
        "ужас",
        "одежда",
        "кресло",
        "больной",
        "поезд",
        "университет",
        "традиция",
        "адрес",
        "декабрь",
        "ладонь",
        "сведение",
        "цветок",
        "лидер",
        "октябрь",
        "занятие",
        "сентябрь",
        "помещение",
        "январь",
        "зритель",
        "редакция",
        "стиль",
        "весна",
        "фактор",
        "август",
        "известие",
        "зависимость",
        "охрана",
        "оборудование",
        "концерт",
        "отделение",
        "расход",
        "выставка",
        "милиция",
        "переход",
        "эпоха",
        "запад",
        "произведение",
        "родина",
        "собственность",
        "тайна",
        "трава",
        "лагерь",
        "имущество",
        "кровать",
        "аппарат",
        "середина",
        "март",
        "клиент",
        "дама",
        "фронт",
        "отрасль",
        "стул",
        "беседа",
        "законодательство",
        "продажа",
        "повышение",
        "музей",
        "след",
        "полковник",
        "сомнение",
        "понимание",
        "апрель",
        "князь",
        "рыба",
        "дума",
        "кодекс",
        "сутки",
        "чудо",
        "шея",
        "судья",
        "крыша",
        "настроение",
        "поток",
        "должность",
        "преступление",
        "мозг",
        "честь",
        "пост",
        "еврей",
        "июнь",
        "сотня",
        "дождь",
        "лестница",
        "дача",
        "установка",
        "появление",
        "получение",
        "образец",
        "труба",
        "главное",
        "осень",
        "костюм",
        "баба",
        "ценность",
        "обязанность",
        "пьеса",
        "таблица",
        "вино",
        "воспоминание",
        "лошадь",
        "коллега",
        "организм",
        "ученик",
        "учреждение",
        "открытие",
        "том",
        "черта",
        "характеристика",
        "выполнение",
        "оборона",
        "выступление",
        "температура",
        "перспектива",
        "подруга",
        "приказ",
        "жертва",
        "ресторан",
        "километр",
        "спор",
        "вкус",
        "признак",
        "промышленность",
        "американец",
        "лоб",
        "заключение",
        "восток",
        "исключение",
        "ключ",
        "постановление",
        "слой",
        "бок",
        "июль",
        "перевод",
        "секретарь",
        "кусок",
        "слух",
        "польза",
        "звонок",
        "обстановка",
        "чиновник",
        "соглашение",
        "деталь",
        "русский",
        "тишина",
        "зарплата",
        "билет",
        "подарок",
        "тюрьма",
        "ящик",
        "конкурс",
        "книжка",
        "изучение",
        "просьба",
        "царь",
        "публика",
        "смех",
        "сообщение",
        "угроза",
        "беда",
        "блок",
        "достижение",
        "назначение",
        "реклама",
        "портрет",
        "масло",
        "стакан",
        "урок",
        "часы",
        "крик",
        "творчество",
        "телевизор",
        "инструмент",
        "концепция",
        "лейтенант",
        "экран",
        "дно",
        "реальность",
        "канал",
        "мясо",
        "знакомый",
        "щека",
        "конфликт",
        "переговоры",
        "запись",
        "вагон",
        "площадка",
        "последствие",
        "сотрудничество",
        "зеркало",
        "тон",
        "академия",
        "палата",
        "потребность",
        "ноябрь",
        "увеличение",
        "дурак",
        "поездка",
        "обед",
        "потеря",
        "февраль",
        "мероприятие",
        "парк",
        "принятие",
        "устройство",
        "вещество",
        "категория",
        "сезон",
        "гостиница",
        "издание",
        "объединение",
        "темнота",
        "человечество",
        "колесо",
        "опасность",
        "разрешение",
        "воздействие",
        "коллектив",
        "камера",
        "запас",
        "следствие",
        "длина",
        "крыло",
        "округ",
        "фон",
        "кандидат",
        "родственник",
        "давление",
        "присутствие",
        "взаимодействие",
        "доска",
        "партнер",
        "двигатель",
        "шум",
        "достоинство",
        "грех",
        "нож",
        "полет",
        "страсть",
        "испытание",
        "TRUE",
        "оплата",
        "разница",
        "водитель",
        "пакет",
        "снижение",
        "формула",
        "живот",
        "капитал",
        "мост",
        "новость",
        "эффект",
        "вход",
        "губернатор",
        "доклад",
        "смена",
        "убийство",
        "эксперт",
        "автобус",
        "платье",
        "кадр",
        "тетя",
        "общение",
        "психология",
        "лев",
        "порог",
        "проверка",
        "процедура",
        "рабочий",
        "ремонт",
        "обращение",
        "обучение",
        "ожидание",
        "памятник",
        "корень",
        "наблюдение",
        "буква",
        "доказательство",
        "признание",
        "постель",
        "штаб",
        "владелец",
        "компьютер",
        "инженер",
        "старуха",
        "лодка",
        "ракета",
        "серия",
        "шутка",
        "вершина",
        "выпуск",
        "кулак",
        "лед",
        "торговля",
        "нефть",
        "молодежь",
        "цифра",
        "корпус",
        "недостаток",
        "сапог",
        "сущность",
        "талант",
        "эффективность",
        "кофе",
        "полоса",
        "основное",
        "рассмотрение",
        "сбор",
        "штат",
        "следователь",
        "жилье",
        "мешок",
        "описание",
        "куст",
        "отказ",
        "замок",
        "редактор",
        "дворец",
        "забота",
        "пиво",
        "диван",
        "столик",
        "эксперимент",
        "печать",
        "кольцо",
        "пистолет",
        "воспитание",
        "начальство",
        "профессия",
        "ворота",
        "добро",
        "дружба",
        "покой",
        "риск",
        "окончание",
        "дым",
        "брак",
        "величина",
        "записка",
        "инициатива",
        "совесть",
        "активность",
        "кость",
        "спорт",
        "кредит",
        "господь",
        "майор",
        "конференция",
        "потолок",
        "библиотека",
        "помощник",
        "конструкция",
        "отдых",
        "ручка",
        "металл",
        "молоко",
        "прокурор",
        "транспорт",
        "поэзия",
        "соединение",
        "краска",
        "расстояние",
        "мечта",
        "село",
        "еда",
        "зло",
        "подразделение",
        "сюжет",
        "рубеж",
        "сигнал",
        "атмосфера",
        "крест",
        "вес",
        "взрыв",
        "контакт",
        "сигарета",
        "восторг",
        "золото",
        "почва",
        "премия",
        "король",
        "подъезд",
        "шанс",
        "автомат",
        "заказ",
        "мальчишка",
        "очки",
        "миг",
        "штука",
        "чтение",
        "поселок",
        "свидетель",
        "ставка",
        "сумка",
        "удивление",
        "хвост",
        "песок",
        "поворот",
        "возвращение",
        "мгновение",
        "статус",
        "озеро",
        "строй",
        "параметр",
        "сказка",
        "тенденция",
        "вина",
        "дыхание",
        "версия",
        "масштаб",
        "монастырь",
        "хозяйка",
        "дочка",
        "танец",
        "эксплуатация",
        "коммунист",
        "пенсия",
        "приятель",
        "объяснение",
        "набор",
        "производитель",
        "пыль",
        "философия",
        "мощность",
        "обязательство",
        "уход",
        "горло",
        "кризис",
        "указание",
        "плата",
        "яблоко",
        "препарат",
        "действительность",
        "москвич",
        "остаток",
        "изображение",
        "сделка",
        "сочинение",
        "покупатель",
        "танк",
        "затрата",
        "строка",
        "единица",
        "обработка",
        "чемпионат"
      ],
      "finnish": [
        "kuin",
        "minä",
        "hänen",
        "että",
        "hän",
        "oli",
        "varten",
        "päälle",
        "olemme",
        "kanssa",
        "ne",
        "olla",
        "klo",
        "yksi",
        "olla",
        "tämä",
        "alkaen",
        "mukaan",
        "kuuma",
        "sana",
        "mutta",
        "mitä",
        "jotkut",
        "on",
        "se",
        "sinua",
        "tai",
        "oli",
        "päälle",
        "jos",
        "ja",
        "tehdä",
        "sisään",
        "me",
        "voida",
        "ulos",
        "muut",
        "olivat",
        "joka",
        "tehdä",
        "niiden",
        "aika",
        "jos",
        "tahtoa",
        "miten",
        "sanoi",
        "pieni",
        "kukin",
        "kertoa",
        "tekee",
        "setti",
        "kolme",
        "haluta",
        "ilma",
        "hyvin",
        "myös",
        "pelata",
        "pieni",
        "pää",
        "laittaa",
        "koti",
        "lue",
        "käsi",
        "portti",
        "suuri",
        "oikeinkirjoituksen",
        "lisätä",
        "jopa",
        "maa",
        "täällä",
        "iso",
        "korkea",
        "niin",
        "seurata",
        "säädös",
        "miksi",
        "kysyä",
        "miehet",
        "muutos",
        "meni",
        "valo",
        "pois",
        "tarvitsevat",
        "talo",
        "kuva",
        "yrittää",
        "meille",
        "jälleen",
        "eläin",
        "kohta",
        "äiti",
        "maailma",
        "lähellä",
        "rakentaa",
        "itse",
        "maa",
        "isä",
        "kaikki",
        "uusi",
        "työ",
        "osa",
        "ottaa",
        "saada",
        "paikka",
        "tehty",
        "elää",
        "jossa",
        "jälkeen",
        "takaisin",
        "vähän",
        "vain",
        "pyöreä",
        "mies",
        "vuosi",
        "tuli",
        "joka",
        "hyvä",
        "minua",
        "antaa",
        "meidän",
        "alle",
        "nimi",
        "hyvin",
        "kautta",
        "vain",
        "lomake",
        "virke",
        "suuri",
        "ajatella",
        "sanoa",
        "auttaa",
        "alhainen",
        "linja",
        "erota",
        "vuoro",
        "syy",
        "paljon",
        "tarkoittaa",
        "ennen",
        "liikkua",
        "oikea",
        "poika",
        "vanha",
        "liian",
        "sama",
        "hän",
        "kaikki",
        "siellä",
        "kun",
        "ylös",
        "käyttää",
        "sinun",
        "tapa",
        "noin",
        "monet",
        "sitten",
        "niitä",
        "kirjoittaa",
        "olisi",
        "kuten",
        "niin",
        "nämä",
        "hänen",
        "pitkä",
        "tehdä",
        "asia",
        "nähdä",
        "häntä",
        "kaksi",
        "on",
        "katso",
        "lisää",
        "päivä",
        "voisi",
        "mennä",
        "tulevat",
        "teki",
        "numero",
        "ääni",
        "ei",
        "eniten",
        "ihmiset",
        "minun",
        "yli",
        "tietää",
        "vesi",
        "kuin",
        "puhelu",
        "ensimmäinen",
        "jotka",
        "saattaa",
        "alas",
        "puoli",
        "ollut",
        "nyt",
        "löytää",
        "pää",
        "seistä",
        "oma",
        "sivu"
      ],
      "englishTop1000": [
        "as",
        "I",
        "his",
        "that",
        "he",
        "was",
        "for",
        "on",
        "are",
        "with",
        "they",
        "be",
        "at",
        "one",
        "have",
        "this",
        "from",
        "by",
        "hot",
        "word",
        "but",
        "what",
        "some",
        "is",
        "it",
        "you",
        "or",
        "had",
        "the",
        "of",
        "to",
        "and",
        "a",
        "in",
        "we",
        "can",
        "out",
        "other",
        "were",
        "which",
        "do",
        "their",
        "time",
        "if",
        "will",
        "how",
        "said",
        "an",
        "each",
        "tell",
        "does",
        "set",
        "three",
        "want",
        "air",
        "well",
        "also",
        "play",
        "small",
        "end",
        "put",
        "home",
        "read",
        "hand",
        "port",
        "large",
        "spell",
        "add",
        "even",
        "land",
        "here",
        "must",
        "big",
        "high",
        "such",
        "follow",
        "act",
        "why",
        "ask",
        "men",
        "change",
        "went",
        "light",
        "kind",
        "off",
        "need",
        "house",
        "picture",
        "try",
        "us",
        "again",
        "animal",
        "point",
        "mother",
        "world",
        "near",
        "build",
        "self",
        "earth",
        "father",
        "any",
        "new",
        "work",
        "part",
        "take",
        "get",
        "place",
        "made",
        "live",
        "where",
        "after",
        "back",
        "little",
        "only",
        "round",
        "man",
        "year",
        "came",
        "show",
        "every",
        "good",
        "me",
        "give",
        "our",
        "under",
        "name",
        "very",
        "through",
        "just",
        "form",
        "sentence",
        "great",
        "think",
        "say",
        "help",
        "low",
        "line",
        "differ",
        "turn",
        "cause",
        "much",
        "mean",
        "before",
        "move",
        "right",
        "boy",
        "old",
        "too",
        "same",
        "she",
        "all",
        "there",
        "when",
        "up",
        "use",
        "your",
        "way",
        "about",
        "many",
        "then",
        "them",
        "write",
        "would",
        "like",
        "so",
        "these",
        "her",
        "long",
        "make",
        "thing",
        "see",
        "him",
        "two",
        "has",
        "look",
        "more",
        "day",
        "could",
        "go",
        "come",
        "did",
        "number",
        "sound",
        "no",
        "most",
        "people",
        "my",
        "over",
        "know",
        "water",
        "than",
        "call",
        "first",
        "who",
        "may",
        "down",
        "side",
        "been",
        "now",
        "find",
        "head",
        "stand",
        "own",
        "page",
        "should",
        "country",
        "found",
        "answer",
        "school",
        "grow",
        "study",
        "still",
        "learn",
        "plant",
        "cover",
        "food",
        "sun",
        "four",
        "between",
        "state",
        "keep",
        "eye",
        "never",
        "last",
        "let",
        "thought",
        "city",
        "tree",
        "cross",
        "farm",
        "hard",
        "start",
        "might",
        "story",
        "saw",
        "far",
        "sea",
        "draw",
        "left",
        "late",
        "run",
        "don't",
        "while",
        "press",
        "close",
        "night",
        "real",
        "life",
        "few",
        "north",
        "book",
        "carry",
        "took",
        "science",
        "eat",
        "room",
        "friend",
        "began",
        "idea",
        "fish",
        "mountain",
        "stop",
        "once",
        "base",
        "hear",
        "horse",
        "cut",
        "sure",
        "watch",
        "color",
        "face",
        "wood",
        "main",
        "open",
        "seem",
        "together",
        "next",
        "white",
        "children",
        "begin",
        "got",
        "walk",
        "example",
        "ease",
        "paper",
        "group",
        "always",
        "music",
        "those",
        "both",
        "mark",
        "often",
        "letter",
        "until",
        "mile",
        "river",
        "car",
        "feet",
        "care",
        "second",
        "enough",
        "plain",
        "girl",
        "usual",
        "young",
        "ready",
        "above",
        "ever",
        "red",
        "list",
        "though",
        "feel",
        "talk",
        "bird",
        "soon",
        "body",
        "dog",
        "family",
        "direct",
        "pose",
        "leave",
        "song",
        "measure",
        "door",
        "product",
        "black",
        "short",
        "numeral",
        "class",
        "wind",
        "question",
        "happen",
        "complete",
        "ship",
        "area",
        "half",
        "rock",
        "order",
        "fire",
        "south",
        "problem",
        "piece",
        "told",
        "knew",
        "pass",
        "since",
        "top",
        "whole",
        "king",
        "street",
        "inch",
        "multiply",
        "nothing",
        "course",
        "stay",
        "wheel",
        "full",
        "force",
        "blue",
        "object",
        "decide",
        "surface",
        "deep",
        "moon",
        "island",
        "foot",
        "system",
        "busy",
        "test",
        "record",
        "boat",
        "common",
        "gold",
        "possible",
        "plane",
        "stead",
        "dry",
        "wonder",
        "laugh",
        "thousand",
        "ago",
        "ran",
        "check",
        "game",
        "shape",
        "equate",
        "hot",
        "miss",
        "brought",
        "heat",
        "snow",
        "tire",
        "bring",
        "yes",
        "distant",
        "fill",
        "east",
        "paint",
        "language",
        "among",
        "unit",
        "power",
        "town",
        "fine",
        "certain",
        "fly",
        "fall",
        "lead",
        "cry",
        "dark",
        "machine",
        "note",
        "wait",
        "plan",
        "figure",
        "star",
        "box",
        "noun",
        "field",
        "rest",
        "correct",
        "able",
        "pound",
        "done",
        "beauty",
        "drive",
        "stood",
        "contain",
        "front",
        "teach",
        "week",
        "final",
        "gave",
        "green",
        "oh",
        "quick",
        "develop",
        "ocean",
        "warm",
        "free",
        "minute",
        "strong",
        "special",
        "mind",
        "behind",
        "clear",
        "tail",
        "produce",
        "fact",
        "space",
        "heard",
        "best",
        "hour",
        "better",
        "true",
        "during",
        "hundred",
        "five",
        "remember",
        "step",
        "early",
        "hold",
        "west",
        "ground",
        "interest",
        "reach",
        "fast",
        "verb",
        "sing",
        "listen",
        "six",
        "table",
        "travel",
        "less",
        "morning",
        "ten",
        "simple",
        "several",
        "vowel",
        "toward",
        "war",
        "lay",
        "against",
        "pattern",
        "slow",
        "center",
        "love",
        "person",
        "money",
        "serve",
        "appear",
        "road",
        "map",
        "rain",
        "rule",
        "govern",
        "pull",
        "cold",
        "notice",
        "voice",
        "energy",
        "hunt",
        "probable",
        "bed",
        "brother",
        "egg",
        "ride",
        "cell",
        "believe",
        "perhaps",
        "pick",
        "sudden",
        "count",
        "square",
        "reason",
        "length",
        "represent",
        "art",
        "subject",
        "region",
        "size",
        "vary",
        "settle",
        "speak",
        "weight",
        "general",
        "ice",
        "matter",
        "circle",
        "pair",
        "include",
        "divide",
        "syllable",
        "felt",
        "grand",
        "ball",
        "yet",
        "wave",
        "drop",
        "heart",
        "am",
        "present",
        "heavy",
        "dance",
        "engine",
        "position",
        "arm",
        "wide",
        "sail",
        "material",
        "fraction",
        "forest",
        "sit",
        "race",
        "window",
        "store",
        "summer",
        "train",
        "sleep",
        "prove",
        "lone",
        "leg",
        "exercise",
        "wall",
        "catch",
        "mount",
        "wish",
        "sky",
        "board",
        "joy",
        "winter",
        "sat",
        "written",
        "wild",
        "instrument",
        "kept",
        "glass",
        "grass",
        "cow",
        "job",
        "edge",
        "sign",
        "visit",
        "past",
        "soft",
        "fun",
        "bright",
        "gas",
        "weather",
        "month",
        "million",
        "bear",
        "finish",
        "happy",
        "hope",
        "flower",
        "clothe",
        "strange",
        "gone",
        "trade",
        "melody",
        "trip",
        "office",
        "receive",
        "row",
        "mouth",
        "exact",
        "symbol",
        "die",
        "least",
        "trouble",
        "shout",
        "except",
        "wrote",
        "seed",
        "tone",
        "join",
        "suggest",
        "clean",
        "break",
        "lady",
        "yard",
        "rise",
        "bad",
        "blow",
        "oil",
        "blood",
        "touch",
        "grew",
        "cent",
        "mix",
        "team",
        "wire",
        "cost",
        "lost",
        "brown",
        "wear",
        "garden",
        "equal",
        "sent",
        "choose",
        "fell",
        "fit",
        "flow",
        "fair",
        "bank",
        "collect",
        "save",
        "control",
        "decimal",
        "ear",
        "else",
        "quite",
        "broke",
        "case",
        "middle",
        "kill",
        "son",
        "lake",
        "moment",
        "scale",
        "loud",
        "spring",
        "observe",
        "child",
        "straight",
        "consonant",
        "nation",
        "dictionary",
        "milk",
        "speed",
        "method",
        "organ",
        "pay",
        "age",
        "section",
        "dress",
        "cloud",
        "surprise",
        "quiet",
        "stone",
        "tiny",
        "climb",
        "cool",
        "design",
        "poor",
        "lot",
        "experiment",
        "bottom",
        "key",
        "iron",
        "single",
        "stick",
        "flat",
        "twenty",
        "skin",
        "smile",
        "crease",
        "hole",
        "jump",
        "baby",
        "eight",
        "village",
        "meet",
        "root",
        "buy",
        "raise",
        "solve",
        "metal",
        "whether",
        "push",
        "seven",
        "paragraph",
        "third",
        "shall",
        "held",
        "hair",
        "describe",
        "cook",
        "floor",
        "either",
        "result",
        "burn",
        "hill",
        "safe",
        "cat",
        "century",
        "consider",
        "type",
        "law",
        "bit",
        "coast",
        "copy",
        "phrase",
        "silent",
        "tall",
        "sand",
        "soil",
        "roll",
        "temperature",
        "finger",
        "industry",
        "value",
        "fight",
        "lie",
        "beat",
        "excite",
        "natural",
        "view",
        "sense",
        "capital",
        "won't",
        "chair",
        "danger",
        "fruit",
        "rich",
        "thick",
        "soldier",
        "process",
        "operate",
        "practice",
        "separate",
        "difficult",
        "doctor",
        "please",
        "protect",
        "noon",
        "crop",
        "modern",
        "element",
        "hit",
        "student",
        "corner",
        "party",
        "supply",
        "whose",
        "locate",
        "ring",
        "character",
        "insect",
        "caught",
        "period",
        "indicate",
        "radio",
        "spoke",
        "atom",
        "human",
        "history",
        "effect",
        "electric",
        "expect",
        "bone",
        "rail",
        "imagine",
        "provide",
        "agree",
        "thus",
        "gentle",
        "woman",
        "captain",
        "guess",
        "necessary",
        "sharp",
        "wing",
        "create",
        "neighbor",
        "wash",
        "bat",
        "rather",
        "crowd",
        "corn",
        "compare",
        "poem",
        "string",
        "bell",
        "depend",
        "meat",
        "rub",
        "tube",
        "famous",
        "dollar",
        "stream",
        "fear",
        "sight",
        "thin",
        "triangle",
        "planet",
        "hurry",
        "chief",
        "colony",
        "clock",
        "mine",
        "tie",
        "enter",
        "major",
        "fresh",
        "search",
        "send",
        "yellow",
        "gun",
        "allow",
        "print",
        "dead",
        "spot",
        "desert",
        "suit",
        "current",
        "lift",
        "rose",
        "arrive",
        "master",
        "track",
        "parent",
        "shore",
        "division",
        "sheet",
        "substance",
        "favor",
        "connect",
        "post",
        "spend",
        "chord",
        "fat",
        "glad",
        "original",
        "share",
        "station",
        "dad",
        "bread",
        "charge",
        "proper",
        "bar",
        "offer",
        "segment",
        "slave",
        "duck",
        "instant",
        "market",
        "degree",
        "populate",
        "chick",
        "dear",
        "enemy",
        "reply",
        "drink",
        "occur",
        "support",
        "speech",
        "nature",
        "range",
        "steam",
        "motion",
        "path",
        "liquid",
        "log",
        "meant",
        "quotient",
        "teeth",
        "shell",
        "neck",
        "oxygen",
        "sugar",
        "death",
        "pretty",
        "skill",
        "women",
        "season",
        "solution",
        "magnet",
        "silver",
        "thank",
        "branch",
        "match",
        "suffix",
        "especially",
        "fig",
        "afraid",
        "huge",
        "sister",
        "steel",
        "discuss",
        "forward",
        "similar",
        "guide",
        "experience",
        "score",
        "apple",
        "bought",
        "led",
        "pitch",
        "coat",
        "mass",
        "card",
        "band",
        "rope",
        "slip",
        "win",
        "dream",
        "evening",
        "condition",
        "feed",
        "tool",
        "total",
        "basic",
        "smell",
        "valley",
        "nor",
        "double",
        "seat",
        "continue",
        "block",
        "chart",
        "hat",
        "sell",
        "success",
        "company",
        "subtract",
        "event",
        "particular",
        "deal",
        "swim",
        "term",
        "opposite",
        "wife",
        "shoe",
        "shoulder",
        "spread",
        "arrange",
        "camp",
        "invent",
        "cotton",
        "born",
        "determine",
        "quart",
        "nine",
        "truck",
        "noise",
        "level",
        "chance",
        "gather",
        "shop",
        "stretch",
        "throw",
        "shine",
        "property",
        "column",
        "molecule",
        "select",
        "wrong",
        "gray",
        "repeat",
        "require",
        "broad",
        "prepare",
        "salt",
        "nose",
        "plural",
        "anger",
        "claim",
        "continent"
      ]
    },
    "codes": {
      "javascript": [
        "const btn = document.getElementById('btn')\nlet count = 0\n\nfunction render() {\n  btn.innerText = `Count: ${count}`\n}\n\nbtn.addEventListener('click', () => {\n  // Count from 1 to 10.\n  if (count < 10) {\n    count += 1\n    render()\n  }\n})",
        "// Simple way\nconst person = { name: \"Shoaib\", Age: 25, Gender: \"Male\" };\nfor (const property in person) {\n  console.log(`${property}: ${person[property]}`);\n}\n\n// Another way\nconst anotherPerson = {\n  Name: 'Shoaib',\n  Age: 25,\n  Gender:\"Male\"\n};\n\nfor (const [key, value] of Object.entries(anotherPerson)) {\n  console.log(`${key}: ${value}`);\n}",
        "const students = [\n  {name: 'Shoaib', roll: 2},\n  {name: 'Mehedi', roll: 10},\n  {name: 'Alex', roll: 5}\n];\n\nfunction search(student) {\n  return student.name=== \"Mehedi\";\n}\n\nconsole.log(students.find(search));",
        "const numbers = [1, 1, 20, 3, 3, 3, 9, 9];\nconst uniqueNumbers = [...new Set(numbers)];\n\nconsole.log(uniqueNumbers);",
        "const files = [ 'foo.txt', '.bar', '', 'baz.foo' ];\nlet filePaths = [];\n\nfor (let file of files) {\n  const fileName = file.trim();\n  if(fileName) {\n    const filePath = `~/cool_app/${fileName}`;\n    filePaths.push(filePath);\n  }\n}",
        "function isPalindrome(str) {\n  return str === str.split(\"\").reverse().join(\"\");\n}\n\nconsole.log(isPalindrome(\"ingirumimusnocteetconsumimurigni\"));",
        "LinkedList.prototype.traverse = function(func) {\n    func(this);\n    if (this.next() != null)\n        this.next().traverse(func);\n}\n\n LinkedList.prototype.print = function() {\n    this.traverse( function(node) {print(node.value())} );\n}\n\nsvar head = createLinkedListFromArray([10,20,30,40]);\nhead.print();",
        "const throttle = (fn, wait) => {\n  let inThrottle, lastFn, lastTime;\n  return function() {\n    const context = this,\n      args = arguments;\n    if (!inThrottle) {\n      fn.apply(context, args);\n      lastTime = Date.now();\n      inThrottle = true;\n    } else {\n      clearTimeout(lastFn);\n      lastFn = setTimeout(function() {\n        if (Date.now() - lastTime >= wait) {\n          fn.apply(context, args);\n          lastTime = Date.now();\n        }\n      }, Math.max(wait - (Date.now() - lastTime), 0));\n    }\n  };\n};",
        "const runAsync = fn => {\n  const worker = new Worker(\n    URL.createObjectURL(new Blob([`postMessage((${fn})());`]), {\n      type: 'application/javascript; charset=utf-8'\n    })\n  );\n  return new Promise((res, rej) => {\n    worker.onmessage = ({ data }) => {\n      res(data), worker.terminate();\n    };\n    worker.onerror = err => {\n      rej(err), worker.terminate();\n    };\n  });\n};",
        "const primes = num => {\n  let arr = Array.from({ length: num - 1 }).map((x, i) => i + 2),\n    sqroot = Math.floor(Math.sqrt(num)),\n    numsTillSqroot = Array.from({ length: sqroot - 1 }).map((x, i) => i + 2);\n  numsTillSqroot.forEach(x => (arr = arr.filter(y => y % x !== 0 || y === x)));\n  return arr;\n};",
        "const binarySearch = (arr, item) => {\n  let l = 0,\n    r = arr.length - 1;\n  while (l <= r) {\n    const mid = Math.floor((l + r) / 2);\n    const guess = arr[mid];\n    if (guess === item) return mid;\n    if (guess > item) r = mid - 1;\n    else l = mid + 1;\n  }\n  return -1;\n};"
      ],
      "python": [
        "from os import path\n\ndef check_for_file():\n    print(\"Does file exist:\", path.exists(\"data.csv\"))\n\nif __name__==\"__main__\":\n    check_for_file()",
        "dictionary1 = {\"name\": \"Joy\", \"age\": 25}\ndictionary2 = {\"name\": \"Joy\",\"city\": \"New York\"}\n\nmerged_dict = {**dictionary1, **dictionary2}\nprint(\"Merged dictionary:\", merged_dict)",
        "from os import path\ndef check_for_file(): print(\"Does file exist:\", path.exists(\"data.csv\"))\n\nif __name__==\"__main__\":\n check_for_file()",
        "my_list = ['banana', 'apple', 'orange', 'pineapple']\n\n#Using brute force method\nlast_element = my_list[len(my_list) - 1]\n\n#Using negative indeces\nlast_element = my_list[-1]\n\n#Using pop method\nlast_element = my_list.pop()",
        "def get_vowels(string):\n          return [vowel for vowel in string if vowel in 'aeiou']\n\nprint(\"Vowels are:\", get_vowels('This is some random string'))",
        "import time\n\nstart_time = time.time()\n\ntotal = 0\nfor i in range(10):\n  total += i\nprint(\"Sum:\", total)\n\nend_time = time.time()\ntime_taken = end_time - start_time\nprint(\"Time: \", time_taken)",
        "# Brute force with a try-except block (Python 3+)\ntry: \n    with open('/path/to/file', 'r') as fh:\n        pass\n\nexcept FileNotFoundError: \n    pass\n\n# Leverage the OS package (possible race condition)\nimport os\nexists = os.path.isfile('/path/to/file')\n\n# Wrap the path in an object for enhanced functionality\nfrom pathlib import Path\nconfig = Path('/path/to/file')\nif config.is_file():\n     pass",
        "my_list = [[1, 2], [3, 4]]\n\n# Duplicate a 2D list\n[[item for item in sub_list] for sub_list in my_list]\n\n# Duplicate an n-dimensional list\ndef deep_copy(to_copy):\n    if type(to_copy) is list:\n        return [deep_copy(item) for item in to_copy]\n    else:\n        return to_copy",
        "penguins_87 = \"Crosby\"\npenguins_71 = \"Malkin\"\npenguins_59 = \"Guentzel\"\n\n# Brute force comparison (equality only)\nis_same_player = len(penguins_87) == len(penguins_59)\nif is_same_player:\n  for a, b in zip(penguins_87, penguins_59):\n    if a != b:\n      is_same_player = False\n      break\n\n# Direct comparison\npenguins_87 == penguins_59  # False\npenguins_87 > penguins_59  # False\npenguins_71 <= penguins_71  # True\n\n# Identity checking\npenguins_87 is penguins_87  # True\npenguins_71 is penguins_87  # False"
      ],
      "java": [
        "String original = \"Mary had a X lamb\";\nString little = \"little\";\nString replaced = original.replace(\"X\", little);\nSystem.out.println(replaced);\n// Alternative:\nSystem.out.printf(\"Mary had a %s lamb.\", little);\n// Alternative:\nString formatted = String.format(\"Mary had a %s lamb.\", little);\nSystem.out.println(formatted);",
        "public static long itFibN(int n)\n{\n if (n < 2)\n  return n;\n long ans = 0;\n long n1 = 0;\n long n2 = 1;\n for(n--; n > 0; n--)\n {\n  ans = n1 + n2;\n  n1 = n2;\n  n2 = ans;\n }\n return ans;\n}",
        "import java.nio.file.Paths;\npublic static boolean isEmptyDir(String dirName){\n    return Paths.get(dirName).toFile().listFiles().length == 0;\n}",
        "String s = \"\";\nif(s != null && s.isEmpty()){\n   System.out.println(\"s is empty\");\n}else{\n   System.out.println(\"s is not empty\");\n}",
        "import java.util.Calendar;\nimport java.util.Date;\nimport java.util.GregorianCalendar;\n\n public class Yuletide{\n  public static void main(String[] args) {\n    for(int i = 2008;i<=2121;i++){\n      Calendar cal = new GregorianCalendar(i, Calendar.DECEMBER,25);\n      if(cal.get(Calendar.DAY_OF_WEEK)==Calendar.SUNDAY){\n        System.out.println(cal.getTime());\n      }\n    }\n  }\n}",
        "public static void main(String[] args) {\n    File curDir = new File(\".\");\n    getAllFiles(curDir);\n}\n\nprivate static void getAllFiles(File curDir) {\n    File[] filesList = curDir.listFiles();\n    for (File f: filesList) {\n        if (f.isDirectory())\n            getAllFiles(f);\n        if (f.isFile()) {\n            System.out.println(f.getName());\n        }\n    }\n}",
        "import java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.net.URL;\npublic class Main {\n    public static void main(String[] args)  {\n        try {\n            URL my_url = new URL(\"http://www.example.com\");\n            BufferedReader br = new BufferedReader(new InputStreamReader(my_url.openStream()));\n            String strTemp = \"\";\n            while(null != (strTemp = br.readLine())){\n                System.out.println(strTemp);\n            }\n        } catch (Exception ex) {\n            ex.printStackTrace();\n        }\n    }\n}"
      ],
      "csharp": [
        "class Program\n{\n    public void FizzBuzzGo()\n    {\n        Boolean Fizz = false;\n        Boolean Buzz = false;\n        for (int count = 1; count <= 100; count ++)\n        {\n            Fizz = count % 3 == 0;\n            Buzz = count % 5 == 0;\n            if (Fizz && Buzz)\n            {\n                Console.WriteLine(\"Fizz Buzz\");\n                listBox1.Items.Add(\"Fizz Buzz\");\n            }\n            else if (Fizz)\n            {\n                Console.WriteLine(\"Fizz\");\n                listBox1.Items.Add(\"Fizz\");\n            }\n            else if (Buzz)\n            {\n                Console.WriteLine(\"Buzz\");\n                listBox1.Items.Add(\"Buzz\");\n            }\n            else\n            {\n                Console.WriteLine(count);\n                listBox1.Items.Add(count);\n            }\n        }\n    }\n}",
        "using System;\nusing System.Collections.Generic;\nusing System.Linq;\n\nnamespace LargestNumber {\n    class Program {\n        static bool ChkDec(int num) {\n            HashSet<int> set = new HashSet<int>();\n\n            return num.ToString()\n                .Select(c => c - '0')\n                .All(d => (d != 0) && (num % d == 0) && set.Add(d));\n        }\n\n         static void Main() {\n            int result = Enumerable.Range(0, 98764321)\n                .Reverse()\n                .Where(ChkDec)\n                .First();\n            Console.WriteLine(result);\n        }\n    }\n}",
        "using System;\n\nclass Program\n{\n    static string Reverse(string value)\n    {\n        char[] chars = value.ToCharArray();\n        Array.Reverse(chars);\n        return new string(chars);\n    }\n\n    static bool IsPalindrome(string value)\n    {\n        return value == Reverse(value);\n    }\n\n    static void Main(string[] args)\n    {\n        ConFsole.WriteLine(IsPalindrome(\"ingirumimusnocteetconsumimurigni\"));\n    }\n}",
        "using System;\n\npublic class ReverseWordsInString\n{\n    public static void Main(string[] args)\n    {\n        string text = @\"ice and fire\";\n\n         foreach (string line in text.Split(Environment.NewLine)) {\n            //Splits on any whitespace, not just spaces\n\n            string[] words = line.Split(default(char[]), RemoveEmptyEntries);\n            Array.Reverse(words);\n            WriteLine(string.Join(\" \", words));\n        }\n    }\n}",
        "#include <iostream>\n#include <forward_list>\n\nint main()\n{\n    std::forward_list<int> list{1, 2, 3, 4, 5};\n    for (int e : list)\n        std::cout << e << std::endl;\n}"
      ],
      "php": [
        "$odd = function ($prev) use ( &$odd ) {\n  $a = fgetc(STDIN);  if (!ctype_alpha($a)) {\n    $prev();\n    fwrite(STDOUT, $a);\n    return $a != '.';\n  }\n  $clos = function () use ($a , $prev) {\n    fwrite(STDOUT, $a);\n    $prev();\n  };\n  return $odd($clos);\n};\n$even = function () {\n  while (true) {\n    $c = fgetc(STDIN);\n    fwrite(STDOUT, $c);\n    if (!ctype_alpha($c)) {\n      return $c != \".\";\n    }\n  }\n};\n$prev = function(){};\n$e = false;\nwhile ($e ? $odd($prev) : $even()) {\n  $e = !$e;\n}",
        "function fibIter($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    $fibPrev = 0;\n    $fib = 1;\n    foreach (range(1, $n-1) as $i) {\n        list($fibPrev, $fib) = array($fib, $fib + $fibPrev);\n    }\n    return $fib;\n}",
        "$str = ''; // assign an empty string to a variable\n\n// check that a string is empty\nif (empty($str)) { ... }\n\n// check that a string is not empty\nif (! empty($str)) { ... }\n\n// we could also use the following\nif ($str == '') { ... }\nif ($str != '') { ... }\n\nif (strlen($str) == 0) { ... }\nif (strlen($str) != 0) { ... }",
        "for($i=2008; $i<2121; $i++)\n{\n  $datetime = new DateTime(\"$i-12-25 00:00:00\");\n  if ( $datetime->format(\"w\") == 0 )\n  {\n     echo \"25 Dec $i is Sunday\\n\";\n  }\n}?>"
      ],
      "typescript": [
        "interface User {\n  name: string;\n  id: number;\n}\n\nclass UserAccount {\n  name: string;\n  id: number;\n\n  constructor(name: string, id: number) {\n    this.name = name;\n    this.id = id;\n  }\n}\n\nconst user: User = new UserAccount(\"Murphy\", 1);\nTry",
        "class VirtualPoint {\n  x: number;\n  y: number;\n\n  constructor(x: number, y: number) {\n    this.x = x;\n    this.y = y;\n  }\n}\n\nconst newVPoint = new VirtualPoint(13, 56);\nlogPoint(newVPoint); // logs \"13, 56\"",
        "function start(\n  arg: string | string[] | (() => string) | { s: string }\n): string {\n  // this is super common in JavaScript\n  if (typeof arg === \"string\") {\n    return commonCase(arg);\n  } else if (Array.isArray(arg)) {\n    return arg.map(commonCase).join(",
        "class MsgError extends Error {\n  constructor(m: string) {\n    super(m);\n\n    // Set the prototype explicitly.\n    Object.setPrototypeOf(this, MsgError.prototype);\n  }\n\n  sayHello() {\n    return \"hello \" + this.message;\n  }\n}",
        "namespace Animal {\n  let haveMuscles = true;\n  export function animalsHaveMuscles() {\n    return haveMuscles;\n  }\n}\nnamespace Animal {\n  export function doAnimalsHaveMuscles() {\n    return haveMuscles; // Error, because haveMuscles is not accessible here\n  }\n}",
        "function base<T>() {\n  class Base {\n    static prop: T;\n  }\n  return Base;\n}\n\nfunction derived<T>() {\n  class Derived extends base<T>() {\n    static anotherProp: T;\n  }\n  return Derived;\n}\n\nclass Spec extends derived<string>() {}\n\nSpec.prop; // string\nSpec.anotherProp; // string",
        "function filterByTerm(  input: Array<Link>,\n  searchTerm: string,\n  lookupKey: string = \"url\"\n) {\n  if (!searchTerm) throw Error(\"searchTerm cannot be empty\");\n  if (!input.length) throw Error(\"input cannot be empty\");\n  const regex = new RegExp(searchTerm, \"i\");\n  return input.filter(function(arrayElement) {\n    return arrayElement[lookupKey].match(regex);\n  });\n}",
        "const paolo = {\n  name: \"Paolo\",\n  city: \"Siena\",\n  age: 44\n};\n\nconst tom = {\n  name: \"Tom\",\n  city: \"Munich\",\n  age: 33\n};\n\nfunction filterPerson(arr, term, key) {\n  return arr.filter(function(person) {\n    return person[key].match(term);\n  });\n}\n\nfilterPerson([paolo, tom], \"Siena\", \"city\");"
      ],
      "cpp": [
        "int main()\n{\n    srand(time(0));\n    int n = 1 + (rand() % 10);\n    int g;\n    std::cout << \"I'm thinking of a number between 1 and 10.\\nTryguess it! \";\n    while(true)\n    {\n        std::cin >> g;\n        if (g == n)\n            break;\n        else\n            std::cout << \"That's not my number.Try another guess!\n    }\n    std::cout << \"You've guessed my number!\";\n    return 0;\n}",
        "int main () {\n  std::cout << \"Hello world!\" << std::endl;\n}",
        "int main()\n{\n  int* p;\n\n  p = new int;\n  delete p;\n\n  p = new int(2);\n  delete p;\n\n  std::string* p2\n\n  p2 = new std::string;\n  delete p2;\n\n  p = new int[10];\n  delete[] p;\n\n  p2 = new std::string[10];\n  delete[] p2;\n}",
        "using namespace std;\n\nbool odd()\n{\n  function<void ()> prev = []{};\n  while(true) {\n    int c = cin.get();\n    if (!isalpha(c)) {\n      prev();\n      cout.put(c);\n      return c != '.';\n    }\n    prev = [=] { cout.put(c); prev();  };\n  }\n}\n\nbool even() \n{\n  while(true) {\n    int c;\n    cout.put(c = cin.get());\n    if (!isalpha(c)) return c != '.';\n  }\n}\n\nint main()\n{\n  bool e = false;\n  while( e ? odd() : even() ) e = !e;\n  return 0;\n}",
        "bool is_palindrome(std::string const& s)\n{\n  return std::equal(s.begin(), s.end(), s.rbegin());\n}",
        "int main( ) {\n   std::string original( \"Mary had a X lamb.\" ) , toBeReplaced( \"X\" ) ,\n      replacement ( \"little\" ) ;\n   std::string newString = original.replace( original.find( \"X\" ) ,\n   toBeReplaced.length( ) , replacement ) ;\n   std::cout << \"String after replacement: \" << newString << \" \\n\" ;\n   return 0 ;\n}"
      ],
      "c": [
        "int main(void)\n{\n  printf(\"Hello world!\n\");\n  return EXIT_SUCCESS;\n}",
        "int dir_empty(const char *path)\n{\n  struct dirent *ent;\n  int ret = 1;\n\n  DIR *d = opendir(path);\n  if (!d) {\n    fprintf(stderr, \"%s: \", path);\n    perror(\"\");\n    return -1;\n  }\n\n  while ((ent = readdir(d))) {\n    if (!strcmp(ent->d_name, \".\") || !(strcmp(ent->d_name, \"..\")))\n      continue;\n    ret = 0;\n    break;\n  }\n\n  closedir(d);\n  return ret;\n}",
        "const char *str = \"\";\nif (str) { ... }\nif (str[0] == '0') { ... }\nif ( (str == NULL) || (strlen(str) == 0)) { ... }\nif (strcmp(str, \"\") == 0) { ... }\n",
        "/* Calculate day of week in proleptic Gregorian calendar. Sunday == 0. */\nint wday(int year, int month, int day)\n{\n  int adjustment, mm, yy;\n\n  adjustment = (14 - month) / 12;\n  mm = month + 12 * adjustment - 2;\n  yy = year - adjustment;\n  return (day + (13 * mm - 1) / 5 + yy + yy / 4 - yy / 100 + yy / 400) % 7;\n}\n\nint main()\n{\n  int y;\n\n  for (y = 2008; y <= 2121; y++) {\n    if (wday(y, 12, 25) == 0) printf(\"%04d-12-25\", y);\n  }\n\n   return 0;\n}"
      ],
      "go": [
        "package main\n\nimport \"fmt\"\n\nfunc main() {\n    for i := 1; i <= 100; i++ {\n        switch {\n        case i%15==0:\n            fmt.Println(\"FizzBuzz\")\n        case i%3==0:\n            fmt.Println(\"Fizz\")\n        case i%5==0:\n            fmt.Println(\"Buzz\")\n        default: \n            fmt.Println(i)\n        }\n    }\n}"
      ],
      "kotlin": [
        "fun foo(param: Int) {\n    val result = if (param == 1) {\n        \"one\"\n    } else if (param == 2) {\n        \"two\"\n    } else {\n        \"three\"\n    }\n}",
        "class Turtle {\n    fun penDown()\n    fun penUp()\n    fun turn(degrees: Double)\n    fun forward(pixels: Double)\n}\n\nval myTurtle = Turtle()\nwith(myTurtle) { //draw a 100 pix square\n    penDown()\n    for(i in 1..4) {\n        forward(100.0)\n        turn(90.0)\n    }\n    penUp()\n}",
        "class MyView : View() {\n    private val persons = FXCollections.observableArrayList<Person>(\n            Person(1, \"Samantha Stuart\", LocalDate.of(1981,12,4)),\n            Person(2, \"Tom Marks\", LocalDate.of(2001,1,23)),\n            Person(3, \"Stuart Gills\", LocalDate.of(1989,5,23)),\n            Person(3, \"Nicole Williams\", LocalDate.of(1998,8,11))\n    )\n\n    override val root = vbox {\n        tableview(persons) {\n            column(\"ID\", Person::id)\n            column(\"Name\", Person::name)\n            column(\"Birthday\", Person::birthday)\n            column(\"Age\", Person::age)\n            columnResizePolicy = SmartResize.POLICY\n        }\n    }\n}"
      ],
      "ruby": [
        "(1..100).each do |n|\n  puts if (n % 15).zero?\n    \"FizzBuzz\"\n  elsif (n % 5).zero?\n    \"Buzz\"\n  elsif (n % 3).zero?\n    \"Fizz\"\n  else\n    n\n  end\nend",
        "magic_number = 9*8*7\ndiv = 9876432.div(magic_number) * magic_number\ncandidates = div.step(0, -magic_number)\n\n res = candidates.find do |c|\n  digits = c.digits\n  (digits & [0,5]).empty? && digits == digits.uniq \nend\n puts \"Largest decimal number is #{res}\"",
        "class Thingamajig\n  def initialize\n    fail 'not yet implemented'\n  end\nend\nt = Thingamajig.allocate",
        "f, r = nil\nfwd = proc {|c|\n  c =~ /[[:alpha:]]/ ? [(print c), fwd[Fiber.yield f]][1] : c }\nrev = proc {|c|\n  c =~ /[[:alpha:]]/ ? [rev[Fiber.yield r], (print c)][0] : c }\n\n(f = Fiber.new { loop { print fwd[Fiber.yield r] }}).resume\n(r = Fiber.new { loop { print rev[Fiber.yield f] }}).resume\n\ncoro = f\nuntil $stdin.eof?\n  coro = coro.resume($stdin.getc)\nend",
        "def r_palindrome?(s)\n  if s.length <= 1\n    true\n  elsif s[0] != s[-1]\n    false\n  else\n    r_palindrome?(s[1..-2])\n  end\nend",
        "def fib(n)\n   if n < 2\n     n\n   else\n     prev, fib = 0, 1\n     (n-1).times do\n       prev, fib = fib, fib + prev\n     end\n     fib\n   end\n end\n\np (0..10).map { |i| fib(i) }"
      ],
      "rust": [
        "fn factorial_recursive (n: u64) -> u64 {\n    match n {\n        0 => 1,\n        _ => n * factorial_recursive(n-1)\n    }\n}\n\nfn factorial_iterative(n: u64) -> u64 {\n    (1..=n).product()\n}\n\nfn main () {\n    for i in 1..10 {\n        println!(\"{}\", factorial_recursive(i))\n    }\n    for i in 1..10 {\n        println!(\"{}\", factorial_iterative(i))\n    }\n}",
        "extern crate rand;\n\nfn main() {\n    println!(\"Type in an integer between 1 and 10 and press enter.\");\n\n    let n = rand::random::<u32>() % 10 + 1;\n    loop {\n        let mut line = String::new();\n        std::io::stdin().read_line(&mut line).unwrap();\n        let option: Result<u32,_> = line.trim().parse();\n        match option {\n            Ok(guess) => {\n                if guess < 1 || guess > 10 {\n                    println!(\"Guess is out of bounds; try again.\");\n                } else if guess == n {\n                    println!(\"Well guessed!\");\n                    break;\n                } else {\n                    println!(\"Wrong! Try again.\");\n                }\n            },\n            Err(_) => println!(\"Invalid input; try again.\")\n        }\n    }\n}",
        "fn main() {\n    println!(\"Mary had a {} lamb\", \"little\");\n    // You can specify order\n    println!(\"{1} had a {0} lamb\", \"little\", \"Mary\");\n    // Or named arguments if you prefer\n    println!(\"{name} had a {adj} lamb\", adj=\"little\", name=\"Mary\");\n}",
        "fn main() {\n    let mut prev = 0;\n    // Rust needs this type hint for the checked_add method\n    let mut curr = 1usize;\n\n     while let Some(n) = curr.checked_add(prev) {\n        prev = curr;\n        curr = n;\n        println!(\"{}\", n);\n    }\n}",
        "fn main() {\n    let mut prev = 0;\n    // Rust needs this type hint for the checked_add method\n    let mut curr = 1usize;\n     while let Some(n) = curr.checked_add(prev) {\n        prev = curr;\n        curr = n;\n        println!(\"{}\", n);\n    }\n}"
      ]
    }
  }

  //====================================================
  // Global
  //====================================================
  const vscode = {};

  vscode.getState=function(){
    return {
      type: "allConfig",
      words: source.words,
      allWords:source.words,
      codes: source.codes,
      language: 'english',
      codeLanguage: 'java',
      mode: 'code snippets',
      count: 240,
      punctuation: 'false',
      colorBlindMode: 'true',
    }
  }

  // Handle messages sent from the extension to the webview
  window.addEventListener("message", (event) => {
    const message = event.data;

    // Message sent when the extension activates and sends settings
    if (message.type === "allConfig") {
      setBoxBackgroundColor();

      // Put words list and settings into a state
      vscode.setState({
        allWords: message.words,
        allCodes: message.codes,
        language: message.language,
        codeLanguage: message.codeLanguage,
        count: message.count,
        mode: message.mode,
        punctuation: message.punctuation,
        colorBlindMode: message.colorBlindMode,
      });
      extensionState = vscode.getState();

      // Change words list and settings
      allWords = message.words;
      allCodes = message.codes;
      setLanguage(message.language);
      setCodeLanguage(message.codeLanguage);
      setWordCount(message.count);
      setTimeCount(message.count);
      setTypingMode(message.mode);
      setColorBlindMode(message.colorBlindMode);
      setPunctuation(message.punctuation);

      // Start typing test
      if (extensionState.mode === "code snippets") {
        setCodeText();
        showCodeText();
      } else {
        setText();
        showText();
      }
    } else if (message.type === "practiceWithSelection") {
      setBoxBackgroundColor();

      // Put words list and settings into a state
      vscode.setState({
        allWords: message.words,
        allCodes: message.codes,
        language: message.language,
        codeLanguage: message.codeLanguage,
        count: message.count,
        mode: message.mode,
        punctuation: message.punctuation,
        colorBlindMode: message.colorBlindMode,
      });
      extensionState = vscode.getState();

      // Change words list and settings
      allWords = message.words;
      allCodes = message.codes;
      setLanguage(message.language);
      setCodeLanguage(message.codeLanguage);
      setWordCount(message.count);
      setTimeCount(message.count);
      setTypingMode(message.mode);
      setColorBlindMode(message.colorBlindMode);
      setPunctuation(message.punctuation);

      // Start typing test
      setSelectedCodeText(message.selectedCode, message.selectedCodeLanguage);

      showCodeText(message.selectedCodeLanguage);
    } else {
      // Message to change a single setting
      switch (message.config) {
        case "switchNaturalLanguage":
          if (message.value) {
            setLanguage(message.value);

            vscode.setState({ ...extensionState, language: message.value });
            extensionState = vscode.getState();

            if (extensionState.mode !== "code snippets") {
              setText();
              showText();
            }
          }
          break;

        case "switchProgrammingLanguage":
          if (message.value) {
            setCodeLanguage(message.value);

            vscode.setState({
              ...extensionState,
              codeLanguage: message.value,
            });
            extensionState = vscode.getState();

            if (extensionState.mode === "code snippets") {
              setCodeText();
              showCodeText();
            }
          }
          break;

        case "changeTypingMode":
          if (message.value) {
            vscode.setState({
              ...extensionState,
              mode: message.value,
            });
            extensionState = vscode.getState();

            gameOver = true;
            setTypingMode(message.value);
          }
          break;

        case "togglePunctuation":
          if (message.value) {
            setPunctuation(message.value);

            vscode.setState({
              ...extensionState,
              punctuation: message.value,
            });
            extensionState = vscode.getState();

            if (extensionState.mode !== "code snippets") {
              setText();
              showText();
            }
          }
          break;

        case "toggleColorBlindMode":
          setColorBlindMode(message.value);

          vscode.setState({ ...extensionState, colorBlindMode: message.value });
          extensionState = vscode.getState();
          break;

        case "changeCount":
          if (message.value) {
            setWordCount(message.value);
            setTimeCount(message.value);

            vscode.setState({
              ...extensionState,
              count: message.value,
            });
            extensionState = vscode.getState();

            if (extensionState.mode !== "code snippets") {
              setText();
              showText();
            }
          }
          break;

        default:
          break;
      }
    }
  });

  // Get document elements
  const textDisplay = document.querySelector("#text-display");
  const inputField = document.querySelector("#input-field");

  const cursor = document.getElementById("cursor");
  const root = document.documentElement;

  // Initialize dynamic variables
  let selectedLanguageWords = [];
  let currentWordsList = [];
  let currentWord = 0;
  let correctKeys = 0;
  let punctuation = false;
  let wordCount;
  let timeCount;
  let startDate = 0;
  let timerActive = false;
  let timer;

  let allWords = [];
  let allCodes = source.codes;
  let selectedLanguageCodes = [];
  let selectedLanguageName = "";
  let currentCode = "";
  let gameOver = true;
  let codeStartDate = 0;
  let codeState = {
    firstChar: null,
    lastChar: null,
    currentChar: null,
    currentCharNum: 0,
    cursorLeftOffset: 0,
    cursorTopOffset: 0,
    linesLastCursorPositions: [],
  };

  // Get all words and settings from the state if it exists
  let extensionState = vscode.getState();
  if (extensionState) {
    setLanguage(extensionState.language);
    setCodeLanguage(extensionState.codeLanguage);
    setWordCount(extensionState.count);
    setTimeCount(extensionState.count);
    setTypingMode(extensionState.mode);
    setColorBlindMode(extensionState.mode);
    setPunctuation(extensionState.punctuation);
    setText();
    showText();
  }

  // Restart if restart button hit
  document.querySelector("#restart-button").addEventListener("click", (e) => {
    setText(e);
    showText();
  });
  document.querySelector(".codeButton").addEventListener("click", (e) => {
    setCodeText(e);
    showCodeText();
  });

  // Restart if escape key hit
  document.addEventListener("keydown", (e) => {
    if (e.key === "Escape") {
      if (extensionState.mode === "code snippets") {
        setCodeText(e);
        showCodeText();
      } else {
        setText(e);
        showText();
      }
    }
  });

  // Function to change typing mode
  function setTypingMode(_mode) {
    const mode = _mode.toLowerCase();

    switch (mode) {
      case "words (fixed amount)":
        // Update ui
        document.querySelector("#coding-area").style.display = "none";
        document.querySelector("#time-count").style.display = "none";
        document.querySelector("#language-selected").style.display = "none";
        document.querySelector("#typing-area").style.display = "inline";
        document.querySelector("#word-count").style.display = "inline";

        // Start typing test
        setText();
        showText();

        break;

      case "words (against the clock)":
        // Update ui
        document.querySelector("#coding-area").style.display = "none";
        document.querySelector("#word-count").style.display = "none";
        document.querySelector("#language-selected").style.display = "none";
        document.querySelector("#typing-area").style.display = "inline";
        document.querySelector("#time-count").style.display = "inline";

        // Start typing test
        setText();
        showText();

        break;

      case "code snippets":
        // Update ui
        document.querySelector("#typing-area").style.display = "none";
        document.querySelector("#word-count").style.display = "none";
        document.querySelector("#time-count").style.display = "none";
        document.querySelector("#coding-area").style.display = "inline";
        document.querySelector("#language-selected").style.display = "inline";

        // Start typing test
        setCodeText();
        showCodeText();

        break;

      default:
        console.error(`Mode ${mode} is undefined`);
    }
  }

  // Function to change color blind mode
  function setColorBlindMode(_mode) {
    let body = document.querySelector("body");
    if (_mode === "true" && !body.classList.contains("colorblind")) {
      body.classList.add("colorblind");
    }
    if (_mode === "false" && body.classList.contains("colorblind")) {
      body.classList.remove("colorblind");
    }
  }

  // Function to set box backrgound color depending on editor background color
  function setBoxBackgroundColor() {
    let body = document.querySelector("body");

    // Get current editor background color
    let editorBackgroundColor = tinycolor(
      getComputedStyle(root).getPropertyValue("--editorBackgroundColor")
    );
    let boxBackgroundColor = "";

    if (editorBackgroundColor.isLight()) {
      boxBackgroundColor = tinycolor(editorBackgroundColor)
        .darken(4)
        .toString();
    } else {
      boxBackgroundColor = tinycolor(editorBackgroundColor)
        .lighten(4)
        .toString();
    }

    root.style.setProperty("--boxBackgroundColor", boxBackgroundColor);
  }

  //====================================================
  // Words mode
  //====================================================
  // Function to generate a new list of words
  function setText(e) {
    e = e || window.event;
    var keepWordList = e && e.shiftKey;

    // Reset
    if (!keepWordList) {
      currentWordsList = [];
    }
    currentWord = 0;
    correctKeys = 0;
    inputField.value = "";
    timerActive = false;
    clearTimeout(timer);
    textDisplay.style.display = "block";
    inputField.className = "";

    switch (extensionState.mode) {
      case "words (fixed amount)":
        textDisplay.style.height = "auto";

        textDisplay.innerHTML = "";
        if (!keepWordList) {
          currentWordsList = [];

          while (currentWordsList.length < wordCount) {
            const randomWord =
              selectedLanguageWords[
                Math.floor(Math.random() * selectedLanguageWords.length)
              ];
            if (
              currentWordsList[currentWordsList.length - 1] !== randomWord ||
              currentWordsList[currentWordsList.length - 1] === undefined
            ) {
              currentWordsList.push(randomWord);
            }
          }
        }
        break;

      case "words (against the clock)":
        textDisplay.style.height = "3.2rem";

        document.querySelector(`#tc-${timeCount}`).innerHTML = timeCount;

        textDisplay.innerHTML = "";
        if (!keepWordList) {
          currentWordsList = [];

          for (let i = 0; i < 500; i++) {
            let n = Math.floor(Math.random() * selectedLanguageWords.length);

            currentWordsList.push(selectedLanguageWords[n]);
          }
        }
    }

    if (punctuation) addPunctuations();

    inputField.focus();
  }

  // Function to display a list of words
  function showText() {
    currentWordsList.forEach((word) => {
      let span = document.createElement("span");
      span.innerHTML = word + " ";

      textDisplay.appendChild(span);
    });

    // textDisplay.firstChild.classList.add("highlight");
  }

  // Function to calculate and display result
  function showResult() {
    let words, minute, acc;
    switch (extensionState.mode) {
      case "words (fixed amount)":
        words = correctKeys / 5;
        minute = (Date.now() - startDate) / 1000 / 60;
        let totalKeys = -1;

        currentWordsList.forEach((e) => (totalKeys += e.length + 1));
        acc = Math.floor((correctKeys / totalKeys) * 100);
        break;

      case "words (against the clock)":
        words = correctKeys / 5;

        minute = timeCount / 60;
        let sumKeys = -1;

        for (let i = 0; i < currentWord; i++) {
          sumKeys += currentWordsList[i].length + 1;
        }
        acc = acc = Math.min(Math.floor((correctKeys / sumKeys) * 100), 100);
    }

    let wpm = Math.floor(words / minute);

    document.querySelector(
      "#right-wing"
    ).innerHTML = `WPM: ${wpm} / ACC: ${acc}`;
  }

  // Key is pressed in input field (game logic)
  inputField.addEventListener("keydown", (e) => {
    // Add wrong class to input field
    switch (extensionState.mode) {
      case "words (fixed amount)":
        if (currentWord < currentWordsList.length) inputFieldClass();
      case "words (against the clock)":
        if (timerActive) inputFieldClass();
    }
    function inputFieldClass() {
      if (
        (e.key >= "a" && e.key <= "z") ||
        e.key === `'` ||
        e.key === "," ||
        e.key === "." ||
        e.key === ";"
      ) {
        let inputWordSlice = inputField.value + e.key;

        let currentWordSlice = currentWordsList[currentWord].slice(
          0,
          inputWordSlice.length
        );

        inputField.className =
          inputWordSlice === currentWordSlice ? "" : "wrong";
      } else if (e.key === "Backspace") {
        let inputWordSlice = e.ctrlKey
          ? ""
          : inputField.value.slice(0, inputField.value.length - 1);

        let currentWordSlice = currentWordsList[currentWord].slice(
          0,
          inputWordSlice.length
        );

        inputField.className =
          inputWordSlice === currentWordSlice ? "" : "wrong";
      } else if (e.key === " ") {
        inputField.className = "";
      }
    }

    // If it is the first character entered
    if (currentWord === 0 && inputField.value === "") {
      switch (extensionState.mode) {
        case "words (fixed amount)":
          startDate = Date.now();
          break;

        case "words (against the clock)":
          if (!timerActive) {
            startTimer(timeCount);
            timerActive = true;
          }

          function startTimer(time) {
            if (time > 0) {
              document.querySelector(`#tc-${timeCount}`).innerHTML = time;
              timer = setTimeout(() => {
                time--;
                startTimer(time);
              }, 1000);
            } else {
              timerActive = false;

              textDisplay.style.display = "none";

              inputField.className = "";

              document.querySelector(`#tc-${timeCount}`).innerHTML = timeCount;
              showResult();
            }
          }
      }
    }

    // If it is the space key check the word and add correct/wrong class
    if (e.key === " ") {
      e.preventDefault();

      if (inputField.value !== "") {
        // Scroll down text when reach new line
        if (extensionState.mode === "words (against the clock)") {
          const currentWordPosition =
            textDisplay.childNodes[currentWord].getBoundingClientRect();
          const nextWordPosition =
            textDisplay.childNodes[currentWord + 1].getBoundingClientRect();
          if (currentWordPosition.top < nextWordPosition.top) {
            for (let i = 0; i < currentWord + 1; i++)
              textDisplay.childNodes[i].style.display = "none";
          }
        }

        // If it is not the last word increment currentWord,
        if (currentWord < currentWordsList.length - 1) {
          if (inputField.value === currentWordsList[currentWord]) {
            textDisplay.childNodes[currentWord].classList.add("correct");

            correctKeys += currentWordsList[currentWord].length + 1;
          } else {
            textDisplay.childNodes[currentWord].classList.add("wrong");
          }

          textDisplay.childNodes[currentWord + 1].classList.add("highlight");
        } else if (currentWord === currentWordsList.length - 1) {
          textDisplay.childNodes[currentWord].classList.add("wrong");
          showResult();
        }

        inputField.value = "";
        currentWord++;
      }

      // Else if it is the last word and input word is correct show the result
    } else if (currentWord === currentWordsList.length - 1) {
      if (inputField.value + e.key === currentWordsList[currentWord]) {
        textDisplay.childNodes[currentWord].classList.add("correct");

        correctKeys += currentWordsList[currentWord].length;
        currentWord++;
        showResult();
      }
    }
  });

  // Command center actions
  document.querySelector("#wc-15").addEventListener("click", () => {
    setWordCount(15);
    setText();
    showText();
  });
  document.querySelector("#wc-30").addEventListener("click", () => {
    setWordCount(30);
    setText();
    showText();
  });
  document.querySelector("#wc-60").addEventListener("click", () => {
    setWordCount(60);
    setText();
    showText();
  });
  document.querySelector("#wc-120").addEventListener("click", () => {
    setWordCount(120);
    setText();
    showText();
  });
  document.querySelector("#wc-240").addEventListener("click", () => {
    setWordCount(240);
    setText();
    showText();
  });
  document.querySelector("#tc-15").addEventListener("click", () => {
    setTimeCount(15);
    setText();
    showText();
  });
  document.querySelector("#tc-30").addEventListener("click", () => {
    setTimeCount(30);
    setText();
    showText();
  });
  document.querySelector("#tc-60").addEventListener("click", () => {
    setTimeCount(60);
    setText();
    showText();
  });
  document.querySelector("#tc-120").addEventListener("click", () => {
    setTimeCount(120);
    setText();
    showText();
  });
  document.querySelector("#tc-240").addEventListener("click", () => {
    setTimeCount(240);
    setText();
    showText();
  });

  // Function to add punctuation to a list of words
  function addPunctuations() {
    if (currentWordsList[0] !== undefined) {
      // Capitalize first word
      currentWordsList[0] =
        currentWordsList[0][0].toUpperCase() + currentWordsList[0].slice(1);

      // Add comma, fullstop, question mark, exclamation mark, semicolon. Capitalize the next word
      for (let i = 0; i < currentWordsList.length; i++) {
        const ran = Math.random();

        if (i < currentWordsList.length - 1) {
          if (ran < 0.03) {
            currentWordsList[i] += ",";
          } else if (ran < 0.05) {
            currentWordsList[i] += ".";

            currentWordsList[i + 1] =
              currentWordsList[i + 1][0].toUpperCase() +
              currentWordsList[i + 1].slice(1);
          } else if (ran < 0.06) {
            currentWordsList[i] += "?";

            currentWordsList[i + 1] =
              currentWordsList[i + 1][0].toUpperCase() +
              currentWordsList[i + 1].slice(1);
          } else if (ran < 0.07) {
            currentWordsList[i] += "!";

            currentWordsList[i + 1] =
              currentWordsList[i + 1][0].toUpperCase() +
              currentWordsList[i + 1].slice(1);
          } else if (ran < 0.08) {
            currentWordsList[i] += ";";
          }
        }
      }
      currentWordsList[currentWordsList.length - 1] += ".";
    }
  }

  // Functions to change language setting
  function setLanguage(lang) {
    selectedLanguageWords = extensionState.allWords[lang];
  }

  // Function to change punctuation setting
  function setPunctuation(punct) {
    const punc = punct.toLowerCase();
    if (punc === "true") {
      punctuation = true;
    } else if (punc === "false") {
      punctuation = false;
    }
  }

  // Function to change word count setting
  function setWordCount(wc) {
    wordCount = wc;
    document
      .querySelectorAll("#word-count > span")
      .forEach((e) => (e.style.borderBottom = ""));
    document.querySelector(`#wc-${wordCount}`).style.borderBottom = "2px solid";

    // Change state
    // vscode.setState({ ...extensionState, count: wordCount });
    extensionState = vscode.getState();

    // Send message to extension to update setting
    // vscode.postMessage({
    //   command: "changeCount",
    //   count: wordCount,
    // });
  }

  // Function to change time count setting
  function setTimeCount(tc) {
    timeCount = tc;
    document.querySelectorAll("#time-count > span").forEach((e) => {
      e.style.borderBottom = "";
      e.innerHTML = e.id.substring(3, 6);
    });
    document.querySelector(`#tc-${timeCount}`).style.borderBottom = "2px solid";

    // Change state
    // vscode.setState({ ...extensionState, count: timeCount });
    extensionState = vscode.getState();

    // Send message to extension to update setting
    // vscode.postMessage({
    //   command: "changeCount",
    //   count: timeCount,
    // });
  }

  //====================================================
  // Code mode
  //====================================================
  // Function to set new code snippet and reset states
  function setCodeText(e) {
    document.querySelector("#language-selected").innerHTML =
      extensionState.codeLanguage.charAt(0).toUpperCase() +
      extensionState.codeLanguage.slice(1);

    e = e || window.event;
    var keepWordList = e && e.shiftKey;

    // Change code snippet if shift key is not hit
    if (!keepWordList) {
      currentCode =
        selectedLanguageCodes[
          Math.floor(Math.random() * selectedLanguageCodes.length)
        ];
    }

    // Reset progress state
    clearTimeout(timer);
    gameOver = false;
    codeState = {
      firstChar: null,
      lastChar: null,
      currentChar: null,
      currentCharNum: 0,
      cursorLeftOffset: 0,
      cursorTopOffset: 0,
      linesLastCursorPositions: [],
    };

    // Reset cursor position
    cursor.classList.remove("hidden");
    updateCursorPosition(0, 0);

    return;
  }

  // Function to set selection as new code snippet and reset states
  function setSelectedCodeText(selectedCode, selectedLanguage) {
    console.log(selectedCode)
    console.log(selectedLanguage)
    // Change code snippet
    currentCode = selectedCode;
    document.querySelector("#language-selected").innerHTML =
      selectedLanguage.charAt(0).toUpperCase() + selectedLanguage.slice(1);

    // Reset progress state
    clearTimeout(timer);
    gameOver = false;
    codeState = {
      firstChar: null,
      lastChar: null,
      currentChar: null,
      currentCharNum: 0,
      cursorLeftOffset: 0,
      cursorTopOffset: 0,
      linesLastCursorPositions: [],
    };

    // Reset cursor position
    cursor.classList.remove("hidden");
    updateCursorPosition(0, 0);

    return;
  }

  window.updateTypingCodeAndLanguage=function (selectedCode, selectedLanguage){
    setSelectedCodeText(selectedCode,selectedLanguage)
    showCodeText(selectedLanguage)
  }

  window.updateTypingCode=function (selectedCode){
    selectedCode=String.fromCharCode.apply(String, selectedCode)
    setSelectedCodeText(selectedCode,'java')
    showCodeText('java')
  }

  // Function to show the code snippet in the dom
  function showCodeText(userSelectedLanguage) {
    if (userSelectedLanguage) {
      highlightCode(currentCode, userSelectedLanguage);
    } else {
      highlightCode(currentCode, selectedLanguageName);
    }

    // Update state with the correct characters
    updateStateChars();

    // Focus into it
    document.getElementById("coding-area").focus();
    return;
  }

  // Function to show end results for code snippets mode
  function showCodeResults() {
    let numberOfCharacters = document.querySelectorAll(".char").length;
    let numberOfCorrectTypings = document.querySelectorAll(".passed").length;

    let time = (Date.now() - codeStartDate) / 1000 / 60;
    let words = numberOfCorrectTypings / 5;

    let wpm = Math.floor(words / time);
    let acc = Math.floor((numberOfCorrectTypings / numberOfCharacters) * 100);

    document.querySelector(
      "#right-wing"
    ).innerHTML = `WPM: ${wpm} / ACC: ${acc}`;

    return;
  }

  // Retrieve cursor dimensions from css
  let cursorWidth = 0;
  let cursorHeight = 0;
  setTimeout(() => {
    // Gets the actual rendered width of the char
    cursorWidth = document
      .querySelectorAll(".char")[0]
      .getBoundingClientRect().width;
    cursorHeight = document
      .querySelectorAll(".char")[0]
      .getBoundingClientRect().height;
  }, 100); // Delay ensures that the data is read after rendering

  // Add event listeners for key presses
  document.addEventListener("keydown", (e) => handleKeyDown(e));
  document.addEventListener("keypress", (e) => handleKeyPress(e));

  // Function to set code language
  function setCodeLanguage(lang) {
    selectedLanguageName = lang;
    selectedLanguageCodes = allCodes[lang];
    return;
  }

  // Function to update characters in the state
  function updateStateChars() {
    const toPassSymbols = document.getElementsByClassName("topass");
    codeState = {
      ...codeState,
      firstChar: toPassSymbols[0],
      currentChar: toPassSymbols[0],
      lastChar: toPassSymbols[toPassSymbols.length - 1],
    };
  }

  // Function that sets highlighted code in dom
  function highlightCode(codeSnippet, language) {
    let codeDiv = document.getElementById("code-code");

    document.getElementById("code-pre").className = "";
    document.getElementById("code-code").className = "";

    codeDiv.classList.add(`language-${language}`);
    codeDiv.innerHTML = codeSnippet;

    Prism.highlightElement(codeDiv);

    codeDiv.innerHTML = cutCodeIntoPieces(codeDiv.innerHTML);
  }

  // Function that cuts highlighted code into spans of characters
  function cutCodeIntoPieces(highlightedCode) {
    const regexpTag = /(<\/?span.*?>)/;
    const tagsAndTextArr = highlightedCode.split(regexpTag);
    const regexpSpecialChar = /&[a-z]*;/;
    let codeToRender = "";

    // Wrap code characters with <span class='topass'>
    for (let i = 0; i < tagsAndTextArr.length; i++) {
      // If text element, wrap each symbol with span
      if (tagsAndTextArr[i] !== "" && !regexpTag.test(tagsAndTextArr[i])) {
        let newHtml = "";
        if (regexpSpecialChar.test(tagsAndTextArr[i])) {
          // Special characters
          const specialCharsArr = tagsAndTextArr[i].match(/&[a-z]*;/g);
          // If we have one special character without other symbols
          if (
            specialCharsArr.length === 1 &&
            specialCharsArr[0] === tagsAndTextArr[i]
          ) {
            newHtml += `<span class="char topass">${tagsAndTextArr[i]}</span>`;
            // If we have a special character with other symbols
          } else {
            const otherCharsArr = tagsAndTextArr[i].split(regexpSpecialChar);
            for (let j = 0; j < otherCharsArr.length; j++) {
              if (otherCharsArr[j] === "" && j < specialCharsArr.length) {
                newHtml += `<span class="char topass">${specialCharsArr[0]}</span>`;
                continue;
              }
              for (let k = 0; k < otherCharsArr[j].length; k++) {
                newHtml += `<span class="char topass">${otherCharsArr[j][k]}</span>`;
              }
              if (j !== otherCharsArr.length - 1) {
                newHtml += `<span class="char topass">${specialCharsArr[0]}</span>`;
              }
            }
          }
        } else {
          // Simple words and symbols
          for (let j = 0; j < tagsAndTextArr[i].length; j++) {
            newHtml += `<span class="char topass">${tagsAndTextArr[i][j]}</span>`;
          }
        }
        tagsAndTextArr[i] = newHtml;
      }
      codeToRender += tagsAndTextArr[i];
    }

    return codeToRender;
  }

  // Function that returns the next character to the cursor
  function getNextChar() {
    return document.getElementsByClassName("char")[
      codeState.currentCharNum + 1
    ];
  }

  function  getNextLineChar(){
    for(let next= codeState.currentCharNum + 1;; next++){
      const c = document.getElementsByClassName("char")[
          next
          ];
      if (c.innerHTML!==' '){
        return next;
      }
    }
  }

  // Function that returns the previous character to the cursor
  function getPrevChar() {
    return document.getElementsByClassName("char")[
      codeState.currentCharNum - 1
    ];
  }

  // Function that handles "tab" and "backspace" key presses
  function handleKeyDown(e) {
    if (gameOver) {
      e.submit();
    }

    // If it's the first character, start timer
    if (codeState.currentCharNum === 0) {
      codeStartDate = Date.now();
    }

    // Tab: move cursor further
    if (e.which === 9) {
      e.preventDefault();
      const currentChar = codeState.currentChar;
      const currentCharCode = currentChar.innerText.charCodeAt(0);

      // If the current symbol is a tab character
      if (currentCharCode === 9) {
        handleKeyPress(e);
      }

      // If the current symbol is a tab consisting of spaces
      if (currentCharCode === 32) {
        // Count all next spaces
        let counter = 0;
        let summToAdd = 0;
        let currentEl = currentChar;

        // Calculate the distance to move the cursor and change classes of passed characters
        while (currentEl.innerText.charCodeAt(0) === 32) {
          summToAdd += cursorWidth;
          currentEl.classList.remove("topass");
          currentEl.classList.add("passed");
          currentEl = currentEl.nextElementSibling;
          counter++;
        }

        // Change state depending on how much spaces we have passed
        if (counter === 1) {
          // Single space just for space
          flashCursor();
        } else {
          // Move cursor through spaces
          codeState = {
            ...codeState,
            currentCharNum: codeState.currentCharNum + (counter - 1),
          };
          codeState = {
            ...codeState,
            cursorLeftOffset: codeState.cursorLeftOffset + summToAdd,
            currentChar: getNextChar(),
            currentCharNum: codeState.currentCharNum + 1,
          };
          updateCursorPosition(
            codeState.cursorLeftOffset,
            codeState.cursorTopOffset
          );
        }
      }
    }

    // Backspace: move cursor back
    if (e.key === "Backspace") {
      // If first element is reached, ignore
      if (codeState.currentChar === codeState.firstChar) {
        flashCursor();
        return;
      }

      // Else find out where we are and change state
      const currentChar = getPrevChar();
      const currentCharCode = currentChar.innerText.charCodeAt(0);

      codeState = { ...codeState, currentChar: currentChar };
      currentChar.classList.remove("notpassed");
      currentChar.classList.add("topass");

      // If we are at the beginning of the line, go to the previous line
      if (currentCharCode === 10) {
        const linesLastCursorPositions = codeState.linesLastCursorPositions;

        codeState = {
          ...codeState,
          cursorLeftOffset: linesLastCursorPositions.pop(),
          cursorTopOffset: codeState.cursorTopOffset - cursorHeight,
          linesLastCursorPositions,
          currentCharNum: codeState.currentCharNum - 1,
        };
        updateCursorPosition(
          codeState.cursorLeftOffset,
          codeState.cursorTopOffset
        );

        return;
      }

      // If it's the same line, go one back
      codeState = {
        ...codeState,
        cursorLeftOffset: codeState.cursorLeftOffset - cursorWidth,
        currentCharNum: codeState.currentCharNum - 1,
      };
      updateCursorPosition(
        codeState.cursorLeftOffset,
        codeState.cursorTopOffset
      );
    }
  }

  // Function that handles  all the other key presses
  function handleKeyPress(e) {
    if (gameOver) {
      e.submit();
    }

    // Other keys: change state depending on the key pressed
    e.preventDefault();

    const currentChar = codeState.currentChar;
    const typedSymbolCode = e.which;
    const currentCharCode = currentChar.innerText.charCodeAt(0);

    // If the current symbol is a new line, do nothing if 'enter' not hit
    if (currentCharCode === 10 && typedSymbolCode !== 13) {
      flashCursor();
      return;
    }

    // If the current symbol is not new line, do nothing if 'enter' pressed
    if (currentCharCode !== 10 && typedSymbolCode === 13) {
      flashCursor();
      return;
    }

    // Change classes of passed characters
    currentChar.classList.remove("topass");

    // Change class depending if you typed correct or wrong
    if (typedSymbolCode === currentCharCode) {
      currentChar.classList.add("passed");
    } else {
      currentChar.classList.add("notpassed");
    }

    // If last symbol reached, hide cursor and show stats
    if (codeState.currentChar === codeState.lastChar) {
      cursor.classList.add("hidden");

      showCodeResults();
      gameOver = true;
      return;
    }

    // Else, get next symbol and set it as current
    const next = getNextChar();
    codeState = { ...codeState, currentChar: next };

    // Moving the cursor to the next position

    // If it's new line
    if (currentCharCode === 10 && typedSymbolCode === 13) {
      const position = getNextLineChar();
      const next= document.getElementsByClassName("char")[position];
      const linesLastCursorPositions = codeState.linesLastCursorPositions;
      linesLastCursorPositions.push(codeState.cursorLeftOffset);
      codeState = {
        ...codeState,
        currentChar: next,
        cursorLeftOffset: next.offsetLeft,
        cursorTopOffset: codeState.cursorTopOffset + cursorHeight,
        linesLastCursorPositions,
        currentCharNum: position,
      };
      updateCursorPosition(
        codeState.cursorLeftOffset,
        codeState.cursorTopOffset
      );

      return;
    }

    // If tab symbol is reached
    if (currentCharCode === 9) {
      codeState = {
        ...codeState,
        cursorLeftOffset: codeState.cursorLeftOffset + cursorWidth,
        currentCharNum: codeState.currentCharNum + 1,
      };
      updateCursorPosition(
        codeState.cursorLeftOffset,
        codeState.cursorTopOffset
      );

      return;
    }

    // If it's the same line
    codeState = {
      ...codeState,
      cursorLeftOffset: codeState.cursorLeftOffset + cursorWidth,
      currentCharNum: codeState.currentCharNum + 1,
    };
    updateCursorPosition(codeState.cursorLeftOffset, codeState.cursorTopOffset);
  }

  // Function to update cursor position in the dom
  function updateCursorPosition(left, top) {
    //硬编码 补充top空间 1
    var append=top/14*2;
    top+=append;
    cursor.style.left = `${left}px `;
    cursor.style.top = `${top}px`;
    cursor.scrollIntoView({
      behavior: "smooth",
      block: "center",
      inline: "center",
    });
  }

  // Function to visually flash the cursor
  function flashCursor() {
    cursor.style.background = "rgba(23,0,0,0.44)";
    setTimeout(() => {
      cursor.style.background = "#ffffff";
    }, 100);
  }
})();
